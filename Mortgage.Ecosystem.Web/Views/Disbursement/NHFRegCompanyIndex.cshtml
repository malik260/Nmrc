@{
    Layout = "~/Views/Shared/_Index.cshtml";
}
<div class="container-div">
    <div class="row">
        <div class="ibox">
            <div class="tabs-container">
                <ul class="nav nav-tabs">
                    <li class="active">
                        <a data-toggle="tab" href="#Employer" aria-expanded="true">Pending Employer Registration(s)</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div id="Employer" class="tab-pane active">
                        <div class="panel-body">
                            <div class="container-div">
                                <div class="row">
                                    <div id="searchDiv" class="col-sm-12 search-collapse">
                                        <div class="select-list">
                                            <ul>
                                                <li>
                                                    <label>Name: </label> <input id="name" col="Name" type="text" />
                                                </li>
                                               
                                                <li>
                                                    <a id="btnSearch" class="btn btn-primary btn-sm" onclick="searchEmployerGrid()"><i class="fa fa-search"></i>&nbsp;Search</a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                    <div class="btn-group-sm" id="toolbar">
                                        <a id="btnApprove" class="btn btn-primary disabled" onclick="approveEmployerForm()"><i class="fa fa-check"></i> Approve</a>
                                        <a id="btnReject" class="btn btn-danger disabled" onclick="rejectEmployerForm()"><i class="fa fa-remove"></i> Reject</a>
                                    </div>

                                    <div class="col-sm-12 select-table table-striped">
                                        <table id="gridTable" data-mobile-responsive="true"></table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- SweetAlert2 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

<script type="text/javascript">
    $(function () {
        initGrid();

        laydate.render({ elem: '#startTime', format: 'yyyy-MM-dd' });
        laydate.render({ elem: '#endTime', format: 'yyyy-MM-dd' });
    });

    function initGrid() {
        var queryEmployerUrl = '@Url.Content("~/Company/GetApprovalPageListJson")';
        $('#gridTable').cnTable({
            url: queryEmployerUrl,
            detailView: true,
            sortName: 'BaseModifyTime',
            sortOrder: "Desc",
            columns: [
                { checkbox: true, visible: true },
                { field: 'Id', title: 'Id', visible: false },
                { field: 'Name', title: 'Employer Name', sortable: false },
                { field: 'RCNumber', title: 'RC Number', sortable: false },
                { field: 'Address', title: 'Address', sortable: false },
                {
                    field: 'DateOfIncorporation',
                    title: 'Date Of Incorporation',
                    visible: true,
                    sortable: false,
                    formatter: function (value, row, index) {
                        var date = new Date(value);
                        return date.toLocaleDateString(); // This will display the date in the user's locale format (e.g., '08/31/2023')
                    }
                },
                { field: 'EmailAddress', title: 'Email Address', visible: true, sortable: false },
                { field: 'NameOfRegistrar', title: 'Name Of Registrar', visible: false, sortable: false },
                //{ field: 'CompanyClassName', title: 'Class', visible: false, sortable: false },
                { field: 'CompanyTypeName', title: 'Type', visible: false, sortable: false },
                {
                    field: 'BaseModifyTime', title: 'Create Time', visible: false, formatter: function (value, row, index) {
                        return cn.formatDate(value, "yyyy-MM-dd HH:mm:ss");
                    }
                },

                {
                    field: 'Status',
                    title: 'Status',
                    align: 'center',
                    formatter: function (value, row, index) {
                        if (value == "@ApprovalEnum.Pending.ToInt()") {
                            return '<span class="badge badge-warning">' + "@ApprovalEnum.Pending.GetDescription()" + '</span>';
                        } else if (value == "@ApprovalEnum.Approved.ToInt()") {
                            return '<span class="badge badge-primary">' + "@ApprovalEnum.Approved.GetDescription()" + '</span>';
                        } else if (value == "@ApprovalEnum.Rejected.ToInt()") {
                            return '<span class="badge badge-danger">' + "@ApprovalEnum.Rejected.GetDescription()" + '</span>';
                        }
                        else {
                            return '<span class="badge badge-danger">' + "@ApprovalEnum.Cancelled.GetDescription()" + '</span>';
                        }
                    }
                }
            ],
            queryParams: function (params) {
                var pagination = $('#gridTable').cnTable('getPagination', params);
                var queryString = $("#searchDiv").getWebControls(pagination);
                return queryString;
            },
            onExpandRow: function (index, row, $detail) {
                initChildGrid(index, row, $detail);
            }

        });
    }

    function initChildGrid(index, row, $detail) {
        $detail.html('Loading data ...');
        var date = new Date(row.BaseModifyTime);
        var formattedDate = date.toLocaleDateString(); // Format as a localized date string
        var dateOfIncorporation = new Date(row.DateOfIncorporation);
        var formattedDateOfIncorporation = dateOfIncorporation.toLocaleDateString(); // Format as a localized date string
        var htmlData =
            '<div class="card">' +
            '<div class="card-header text-center" > ' +
            '<h6 class="card-title" style="font-weight: bold; color: black; font-size: 15px;">NHF Registration for ' + row.Name + '</h6>' +
            '</div>' +
            '<div class="card-body">' +
            '<form>' +
            '<div class="form-row">' +
            '<div class="form-group col-sm-6">' +
            '<label for="effectiveDate">Effective Date:</label>' +
            '<input type="text" id="effectiveDate" name="effectiveDate" placeholder="Effective Date" class="form-control text-left" readonly value="' + formattedDate + '" /> ' +
            '</div>' +
            '<div class="form-group col-sm-6">' +
            '<label for="emailAddress">Email Address:</label>' +
            '<input type="text" id="emailAddress" name="emailAddress" placeholder="Email Address" class="form-control text-left" readonly value="' + row.EmailAddress + '"/>' +
            '</div>' +
            '</div>' +
            '<div class="form-row">' +
            '<div class="form-group col-sm-6">' +
            '<label for="phone">Phone:</label>' +
            '<input type="text" id="phone" name="phone" placeholder="Phone" class="form-control text-left" readonly value="' + row.MobileNumber + '"/>' +
            '</div>' +
            '<div class="form-group col-sm-6">' +
            '<label for="remark">Remark:</label>' +
            '<input type="text" id="remark" name="remark" placeholder="Remark" class="form-control text-left" />' +
            '</div>' +
            '</div>' +
            '<div class="form-row">' +
            '<div class="form-group col-sm-6">' +
            '<label for="natureOfBusiness">Nature Of Business:</label>' +
            '<input type="text" id="natureOfBusiness" name="natureOfBusiness" placeholder="Nature Of Business" class="form-control text-left" readonly value="' + row.NatureOfBusiness + '"/>' +
            '</div>' +
            '<div class="form-group col-sm-6">' +
            '<label for="nameOfRegistrar">Registrar:</label>' +
            '<input type="text" id="nameOfRegistrar" name="nameOfRegistrar" placeholder="Registrar" class="form-control text-left" readonly value="' + row.NameOfRegistrar + '"/>' +
            '</div>' +
            '</div>' +
            '<div class="form-row">' +
            '<div class="form-group col-sm-6">' +
            '<label for="contributionFrequency">Contribution Frequency:</label>' +
            '<input type="text" id="contributionFrequency" name="contributionFrequency" placeholder="BVN" class="form-control text-left" readonly value="' + row.ContributionFrequencyName + '"/>' +
            '</div>' +
            '<div class="form-group col-sm-6">' +
            '<label for="website">Website:</label>' +
            '<input type="text" id="website" name="website" placeholder="Website" class="form-control text-left" readonly value="' + row.Website + '"/>' +
            '</div>' +
            '</div>' +
            '<div class="form-row">' +
            '<div class="form-group col-sm-6">' +
            '<label for="dateOfIncorporation">Date Of Incorporation:</label>' +
            '<input type="text" id="dateOfIncorporation" name="dateOfIncorporation" placeholder="Date Of Incorporation" class="form-control text-left" readonly value="' + formattedDateOfIncorporation + '"/>' +
            '</div>' +
            '<div class="form-group col-sm-6">' +
            '<label for="address">Address:</label>' +
            '<input type="text" id="address" name="address" placeholder="Address" class="form-control text-left" readonly value="' + row.Address + '"/>' +
            '</div>' +
            '</div>' +
            '<div class="form-row">' +
            '<div class="form-group col-sm-6">' +
            '<label for="sector">Sector:</label>' +
            '<input type="text" id="sector" name="sector" placeholder="Sector" class="form-control text-left" readonly value="' + row.SectorName + '"/>' +
            '</div>' +
            '<div class="form-group col-sm-6">' +
            '<label for="subSector">Sub-Sector:</label>' +
            '<input type="text" id="subSector" name="subSector" placeholder="Sub-Sector" class="form-control text-left" readonly value="' + row.SubSectorName + '"/>' +
            '</div>' +
            '</div>' +
            '</form>' +
            '</div>';
        $detail.html(htmlData);
        // Attach click event to the plus icon
        $detail.find('.card-header').click(function () {
            var $cardBody = $(this).siblings('.card-body');
            if ($cardBody.is(':visible')) {
                $cardBody.hide();
            } else {
                $cardBody.show();
            }
        });
    }




    function searchEmployerGrid() {
        $('#gridTable').cnTable('search');
        resetToolbarStatus();
    }

    function showViewEmployerForm(bView) {
        var id = 0;
        if (!bView) {
            var selectedRow = $("#gridTable").bootstrapTable("getSelections");
            if (!cn.checkRowEdit(selectedRow)) {
                return;
            }
            else {
                id = selectedRow[0].Id;
            }
        }
        cn.openDialog({
            title: id > 0 ? "View Company Record" : "",
            content: '@Url.Content("~/Company/NHFRegCompanyForm")' + '?id=' + id,
            width: "780px",
        });
    }

    function approveEmployerForm() {
        var selectedRow = $("#gridTable").bootstrapTable("getSelections");
        if (cn.checkRowApprove(selectedRow)) {
            Swal.fire({
                title: 'Employer Registration',
                text: "Confirm to approve this record?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, approve it!',
                cancelButtonText: 'No, cancel!',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    var id = cn.getIds(selectedRow);
                    cn.ajax({
                        url: '@Url.Content("~/Company/ApproveFormJson")' + '?id=' + id,
                        type: "post",
                        success: function (obj) {
                            if (obj.Tag == 1) {
                                Swal.fire(
                                    'Approved!',
                                    obj.Message,
                                    'success'
                                );
                                searchEmployerGrid();
                            } else {
                                Swal.fire(
                                    'Error!',
                                    obj.Message,
                                    'error'
                                );
                            }
                        }
                    });
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    Swal.fire(
                        'Cancelled',
                        'The record has not been approved',
                        'error'
                    );
                }
            });
        } else {
            Swal.fire(
                'No selection!',
                'Please select a record to approve.',
                'warning'
            );
        }
    }

    function rejectEmployerForm() {
        var selectedRow = $("#gridTable").bootstrapTable("getSelections");
        if (selectedRow.length > 0) {
            Swal.fire({
                title: 'Employer Registration',
                text: "Confirm to disapprove this record?",
                icon: 'warning',
                input: 'text',
                inputPlaceholder: 'Enter rejection remark',
                showCancelButton: true,
                confirmButtonText: 'Yes, reject it!',
                cancelButtonText: 'No, cancel!',
                reverseButtons: true,
                preConfirm: (remark) => {
                    if (!remark) {
                        Swal.showValidationMessage('Rejection remark is required');
                    }
                    return remark;
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    var id = selectedRow[0].Id;
                    var remark = result.value;
                    cn.ajax({
                        url: '@Url.Content("~/Company/RejectFormJson")' + '?id=' + id + '&remark=' + remark,
                        type: "post",
                        success: function (obj) {
                            if (obj.Tag == 1) {
                                Swal.fire(
                                    'Rejected!',
                                    'The record has been rejected.',
                                    'success'
                                );
                                searchEmployerGrid();
                            } else {
                                Swal.fire(
                                    'Error!',
                                    obj.Message,
                                    'error'
                                );
                            }
                        }
                    });
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    Swal.fire(
                        'Cancelled',
                        'The record has not been rejected',
                        'error'
                    );
                }
            });
        } else {
            Swal.fire(
                'No selection!',
                'Please select a record to reject.',
                'warning'
            );
        }
    }

    function redirectToIndex() {
        location.href = '@Url.Content("~/Company/NHFRegCompanyIndex")';
    }
</script>