@{
   Layout = "~/Views/Shared/_FormWhite.cshtml";
   Layout = "~/Views/Shared/_Index.cshtml";
}

@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment HostingEnvironment
@section header{
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/fileinput/5.0.3/css/fileinput.min.css"))
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/fileinput/5.0.3/js/fileinput.min.js"))
}


<script src ="https://cdn.tiny.cloud/1/97ihdj4pizrgnyrwd26euodeyfufnv6r4f4r656es9h2jdj5/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
<link href="~/lib/bootstrap.table/1.12.0/bootstrap-table.min.css" rel="stylesheet" />
<link href="~/lib/bootstrap.table/1.12.0/bootstrap-table.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/7.2.0/sweetalert2.min.css">
@*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.2.1/css/fileinput.min.css">
*@
@*<script src="~/lib/bootstrap.table/1.12.0/bootstrap-table.js"></script>*@


@*    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.2.1/js/plugins/piexif.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.2.1/js/plugins/sortable.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.2.1/js/fileinput.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.2.1/themes/fas/theme.min.js"></script>*@




<div class="Underwriting" id="underwriting">
        <form id="form1" class="form-horizontal m">
            <div class="dialogblockborder dialogblockborderheadline">
                <div class="dialogblock-header" style="height: auto;">
                    <span class="dialogblockheader">Add Document</span>
                <div class="form-group">
                   
                    <div class="col-sm-6">
                        <label for="documentTitle" class="form-label">Document Title</label>
                        <input id="documentTitle" col="DocumentTitle" class="form-control">
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label" ></label>
                        <button class="btn btn-success" type="button" id="upload" style="margin-top: 20px;">
                            <i class="fa fa-upload"></i> Upload Document
                        </button>
                    </div>
                </div>

                <hr>

                <div class="form-group">                    
                    <div class="col-sm-12">
                        <h4>Microsoft text editor</h4>
                        <textarea id="itextarea"></textarea>
                    </div>

                </div>               

                <div class="form-group">
                    <div class="col-sm-6">
                        <label for="comment" class="form-label">Comments</label>
                        <textarea id="comment" style="height: 150px;" col="Comments" class="form-control"></textarea>
                    </div>
                        <div class="col-sm-6">
                            <div class="btn-group-sm" id="buttons">
                                <label for="comment" class="form-label"></label>
                                </br>
                                </br>
                                <a id="checklist" class="btn btn-success"> <i class="fa fa-list"></i> Checklist</a>
                                <a id="riskAssessment" class="btn btn-danger"><i class="fa fa-exclamation-triangle"></i> Risk Assessement</a>
                                </div>                   
                        </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-6">
                        <label for="nextLevelStaff" class="form-label">Next Level Staff</label>
                        <div id="nextLevelStaff" col="NextLevelStaff"></div>
                    </div>
                </div>


                </div>
            </div>
        
   </form>
    <form id="form2" class="form-horizontal m">
        <div class="dialogblockborder dialogblockborderheadline">
            <div class="dialogblock-header" style="height: auto;">
                <span class="dialogblockheader">Upload</span>
                <title>Drag and Drop Form with File Upload</title>
                <style>
                    .form-container {
                      width: 300px;
                      height: 300px;
                      border: 1px dashed #ccc;
                      padding: 20px;
                    }
                    .droppable-area {
                      width: 50%;
                      height: 30%;
                      border: 1px solid #ccc;
                      text-align: center;
                      line-height: 200px;
                      background-color: #f7f7f7;
                    }

                        .upload-icon {
                      font-size: 50px;
                    }
                </style>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label>Drag and Drop Form with File Upload</label>
                        <div class="droppable-area">
                            <i class="upload-icon">📤</i>
                                @*<i class='fa-upload'></i>*@
                        </div>
                            <div id="dropped-file">
                                <strong>Dropped File:</strong>
                                <span id="file-name"></span>
                            </div>
                            <table id="file-list" class="table table-bordered" style="margin-top: 20px;">
                                <thead>
                                    <tr>
                                        <th>File Name</th>
                                        <th>File Size</th>
                                        <th>Date Attached</th>
                                        <th>Delete</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- File entries will be added here -->
                                </tbody>
                            </table>
                        </div>

                        <div class="col-sm-6">
                            <label class="control-label">Choose File</label>
                            <input id="logo" col="Logo" type="file" multiple>

                          </br>
                            <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>File Name</th>
                                    <th>File Size</th>
                                     <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="file-list">
                                <!-- Uploaded files will be added here -->
                            </tbody>
                        </table>
                      
                    </div>
                </div>
                    <div class="form-group">
                        <div class="col-sm-6">
                            <button class="btn btn-danger" type="button" id="back">
                                <i class="fa fa-arrow-left"></i> Back
                            </button>
                        </div>

                        <div class="col-sm-6">

                        </div>
                    </div>
            </div>
        .</div>
    </form>

    
@*        <div class="dialogblockborder dialogblockborderheadline">
            <div class="dialogblock-header" style="height: auto;">*@
                
@*               
                    table {
                        width: 100%;
                        border-collapse: collapse;
                    }

                    th, td {
                        border: 1px solid #ccc;
                        padding: 8px;

                    }

                    textarea {
                        width: 100%;
                        height: 80px;
                    }

                    .checkbox-container {
                        text-align: center;
                    }

                    textarea {
                        width: 100%;
                        height: 80px;
                    }*/*@


                @*<table id="checklistForm">
                    <tr>
                        <th><strong>Checklist</strong></th>
                        <th><strong>App</strong></th>
                        <th><strong>Not App</strong></th>
                        <th><strong>Remarks</strong></th>
                    </tr>
                    <tr>
                        <td>Open a Current ITMB</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Deposit of at least 40-60% Equity Contribution into Account(Current) with ITMB or evidence of payment of Equity Contribution to Vendor</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Application for Loan Starting tenor, collateral and attacking photocopies of Title Documents of the colateral (must be landed property) (where application) </td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Execution of Mortgage Questionnaire attaching all relevant income statements/Cash flow analysis</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Visitation report by ITMB officer (where applicable)</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td class="checkbox-container"><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Submission of valuation report (where applicable)</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td class="checkbox-container"><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Legal Search Report at the expense of customer (where applicable)</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Submission of original Receipt/Title Document of the property upon full payment</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Statement of A/C for 6months pay slip</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Credit Search Report</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Submission of Office Identity Card</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Submission of Letter of Introduction/Confirmation of Employment (Pesionable/Contract) staff from employer</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Execution of Loan Documents</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td><textarea name="remarks"></textarea></td>
                    </tr>

                    <tr>
                        <td>Execution of Insurance policy on the property to be purchased</td>
                        <td class="checkbox-container"><input type="checkbox" name="app" /></td>
                        <td class="checkbox-container"><input type="checkbox" name="notApp" /></td>
                        <td><textarea name="remarks"></textarea></td>
                    </tr>

                </table>*@

                    <style>
                        /* Basic styling */
                        .container {
                        vertical-align: middle;
                        align-items: center;
                                                justify-content: center;
                        }

                        /* Optional styling for the table */
                        #data-table {
                            width: 100%;
                            border-collapse: collapse;
                        }

/*                            #data-table th, #data-table td {
                                border: 1px solid #ccc;
                                padding: 8px;
                                /text-align: center; 
                                vertical-align: middle;
                            }*/

                            #data-table th {
                                background-color: #f2f2f2;
                                text-align: left;
                            }

                        /* Styling for checkboxes */
                        .checkbox-container{
                            display: flex;
                            justify-content: center;
                            align-items: center;
                        }

                    </style>
               


                <div id="form3" class="form-horizontal m">
                    <div class="dialogblockborder dialogblockborderheadline">
                    <div class="col-sm-9 select-table table-striped">
                        <table id="checklistTable" data-mobile-responsive="true"></table>
                    </div>

                <div class="form-group">
                    <div class="col-sm-6">
                        <button class="btn btn-danger" type="button" id="backChecklist">
                            <i class="fa fa-arrow-left"></i> Back
                        </button>
                    </div>

                    <div class="col-sm-6">
                    </div>
                </div>

             </div>
         </div>




   <div id="form4" class="form-horizontal m">
        <div  class="dialogblockborder dialogblockborderheadline">
            <div class="col-sm-9 select-table table-striped">
                <table id="productAssessmentSetupTable" data-mobile-responsive="true"></table>
            </div>
        </div>
                        <div class="form-group">
                    <div class="col-sm-6">
                        <button class="btn btn-danger" type="button" id="backRiskAssessment">
                            <i class="fa fa-arrow-left"></i> Back
                        </button>
                    </div>

                    <div class="col-sm-6">
                    <button class="btn btn-success" type="button" id="backRiskAssessment">
                        <i class="fa fa-save"></i> Save Computed Scores
                    </button>
                    </div>
                </div>
    </div>


   
   
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/7.2.0/sweetalert2.all.min.js"></script>

 <script type ="text/javascript">

   tinymce.init({
     selector: '#itextarea',
     width: 500
   });

    function handleCheckboxChange(checkbox) {
        const checkboxes = document.querySelectorAll('input[type="checkbox"][name="' + checkbox.name + '"]');
        checkboxes.forEach((cb) => {
            if (cb !== checkbox) {
                cb.checked = false;
            }
        });
    }

    $(document).ready(function () {

            $("#logo").fileinput({
                language: 'en',
                showPreview: false,
                allowedFileExtensions: ['jpeg', 'jpg', 'png', 'gif', 'tiff', 'xlsx', 'pdf', 'doc', 'docx'],
                uploadAsync: true,
                dropZoneEnabled: false, // Disable default drag-and-drop behavior
            }).on("fileuploaded", function (event, data) {
                var obj = data.response;
                if (obj.Tag == 1) {
                    var filePath = obj.Data;
                    var fileName = obj.FileName;
                    var fileSize = obj.FileSize;
                    var deleteButton = $('<button class="btn btn-sm btn-danger delete-file">Delete</button>')
                        .attr('data-filepath', filePath);
                    var newRow = $('<tr>').append(
                        $('<td>').text(fileName),
                        $('<td>').text(fileSize),
                        $('<td>').append(deleteButton)
                    );
                    $('#file-list').append(newRow);
                }
            });

            // Delete a file row
            $(document).on('click', '.delete-file', function () {
                var filePath = $(this).data('filepath');
                // You need to implement the server-side file deletion here

                // Remove the row from the table
                $(this).closest('tr').remove();
            });
        });

    $(document).ready(function () {

        // Prevent default drag-and-drop behavior
        $('.droppable-area').on('dragenter dragover dragleave drop', function (e) {
            e.preventDefault();
            e.stopPropagation();
        });

        // Highlight the droppable area when a file is dragged over
        $('.droppable-area').on('dragenter', function () {
            $(this).addClass('highlight');
        });

        $('.droppable-area').on('dragleave drop', function () {
            $(this).removeClass('highlight');
        });

        // Handle file drop event
        $('.droppable-area').on('drop', function (e) {
            var files = e.originalEvent.dataTransfer.files;
            handleDroppedFiles(files);
        });



            // Delete a file row
            $(document).on('click', '.delete-file', function () {
                $(this).closest('tr').remove();
            });

            function handleDroppedFiles(files) {
                if (files.length > 0) {
                    var file = files[0];
                    $('#file-name').text(file.name);
                    $('#dropped-file').show();

                    // Capture file details in a table row
                    var fileSize = (file.size / 1024).toFixed(2) + ' KB';
                    var currentDate = new Date().toLocaleDateString();
                    var newRow = $('<tr>').append(
                        $('<td>').text(file.name),
                        $('<td>').text(fileSize),
                        $('<td>').text(currentDate),                       
                        $('<td>').html('<button<button class="btn btn-sm btn-danger delete-file"><i class="fa fa-remove"></i></button>')
                    );
                    $('#file-list tbody').append(newRow);
                }
            }
        });



                $(function () {
            checkListGrid();
        });



        function checkListGrid() {
            var queryUrl = '@Url.Content("~/Checklist/GetListJson")';
            $('#checklistTable').cnTable({
                url: queryUrl,
                columns: [
                    { field: 'Checklist', title: 'Checklist', visible: true },
                    { checkbox: true, field: 'AppCheckbox', visible: true },
                    { checkbox: true, field: 'NotAppCheckbox', visible: true },
                    {
                        field: 'Remark',
                        title: 'Remark',
                        visible: true,
                        formatter: function (value, row, index) {
                            return '<textarea class="form-control remark-textarea"></textarea>';
                        }
                    }
                ],
            });

            // Update the checkbox column headers after the table is initialized
            var headerCells = $('#checklistTable thead th');
            $(headerCells[1]).text('App');
            $(headerCells[2]).text('Not App');
        }





        $(document).ready(function () {
        // hide the form initially
        $('#form1').show();
        $('#form2').hide();
        $('#form3').hide();
        $('#form4').hide();



        // add click event listener to the button
        $('#upload').click(function () {
            // unhide the form
            $('#form1').hide();
            $('#form2').show();
            $('#form3').hide();
            $('#form4').hide();

            // prevent the default behavior of the button
            event.preventDefault();
        });

        // add click event listener to the button
        $('#checklist').click(function () {
            
            // unhide the form
            $('#form1').hide();
            $('#form2').hide();
            $('#form3').show();
            $('#form4').hide();

            // prevent the default behavior of the button
            event.preventDefault();
        });
       $('#riskAssessment').click(function () {
            
            // unhide the form
            $('#form1').hide();
            $('#form2').hide();
            $('#form3').hide();
            $('#form4').show();

            // prevent the default behavior of the button
            event.preventDefault();
        });
        $('#back').click(function () {
            
            // unhide the form
            $('#form1').show();
            $('#form2').hide();
            $('#form3').hide();
            $('#form4').hide();

            // prevent the default behavior of the button
            event.preventDefault();
        });
        $('#backChecklist').click(function () {
            
            // unhide the form
            $('#form1').show();
            $('#form2').hide();
            $('#form3').hide();
            $('#form4').hide();

            // prevent the default behavior of the button
            event.preventDefault();
        });

                $('#backRiskAssessment').click(function () {
            
            // unhide the form
            $('#form1').show();
            $('#form2').hide();
            $('#form3').hide();
            $('#form4').hide();

            // prevent the default behavior of the button
            event.preventDefault();
        });
    });

    function AddRiskFactor() {

        var riskFactorId = $('#riskfactorid').val();
        var postData = {
            RiskFactorId: riskFactorId,
            ProductCode: $('#txtRiskFactorProductCode').val(),
            RiskFactorsDescription: $('#txtRiskFactor').val(),
            Weight: $('#txtRiskFactorWeight').val(),
            Id: $('#iid').val(),

        };

        // Determine if it's an update or insert operation
        var url = riskFactorId
            ? '@Url.Content("~/CreditAssessmentRiskFactor/UpdateFormJson")'
            : '@Url.Content("~/CreditAssessmentRiskFactor/SaveFormJson")';

        cn.ajax({
            url: url,
            type: "post",
            data: postData,
            success: function (obj) {
                if (obj.Tag == 1) {
                    cn.msgSuccess(obj.Message);
                    // parent.searchGrid(); // Perform necessary actions after success
                    parent.layer.close(index);
                } else {
                    cn.msgError(obj.Message);
                }
            }
        });
    }
    function riskFormatter(value, row, index) {

        return [
            '<div class="btn-group" role="group" aria-label="Basic example">' +
            '<button type="button" class="editrisk btn btn-sm btn-xs btn-danger" title="Edit Risk">' +
            '<i class="fa fa-list"></i>' + '</button >' +
            '</div>'
        ].join('');
    }
    window.riskEvents = {

        'click .editrisk': function (e, value, row, index) {
            debugger
            $('#txtRiskFactorProductCode').val(row.ProductCode);
            $('#txtRiskFactor').val(row.RiskFactorsDescription);
            $('#txtRiskFactorWeight').val(row.Weight);
            $('#riskfactorid').val(row.RiskFactorId);
            $('#iid').val(row.Id);
            //alert($('#txtriskfactorid').val());
        },
    }


    function AddRiskFactorIndex() {

        var result = ValidateRiskFactorWeight($('#FactorTable'), $('#FactorIndexTable'), $('#txtriskfactorid'), $('#Factorindexid'), $('#txtRiskFactorIndexWeight'));
        var factorIndexId = $('#Factorindexid').val();
        if (result) {
            var postData = {
                ProductCode: $('#txtRiskFactorIndexProductCode').val(),
                FactorIndexId: $('#Factorindexid').val(),
                FactorIndexDescription: $('#txtRiskFactorIndex').val(),
                Weight: $('#txtRiskFactorIndexWeight').val(),
                RiskFactorId: $('#txtriskfactorid').val(),
                Id: $('#iid').val(),
            };
            // Determine if it's an update or insert operation
            var url = factorIndexId
                ? '@Url.Content("~/CreditAssessmentFactorIndex/UpdateFormJson")'
                : '@Url.Content("~/CreditAssessmentFactorIndex/SaveFormJson")';

            cn.ajax({
                url: url,
                type: "post",
                data: postData,
                success: function (obj) {
                    if (obj.Tag == 1) {

                        cn.msgSuccess(obj.Message);
                        //parent.searchGrid();
                        parent.layer.close(index);
                    }
                    else {
                        cn.msgError(obj.Message);
                    }
                }
            });
        }


    }
    function factorIndexFormatter(value, row, index) {
        return [
            '<div class="btn-group" role="group" aria-label="Basic example">' +
            '<button type="button" class="editfactor btn btn-sm btn-xs btn-danger" title="Edit Factor Index">' +
            '<i class="fa fa-list"></i>' + '</button >' +
            '</div>'
        ].join('');
    }
    window.factorIndexEvents = {
        'click .editfactor': function (e, value, row, index) {
            $('#txtRiskFactorIndexProductCode').val(row.ProductCode);
            $('#txtRiskFactorIndex').val(row.FactorIndexDescription);
            $('#txtRiskFactorIndexWeight').val(row.Weight);
            $('#Factorindexid').val(row.FactorIndexId);
            $('#iid').val(row.Id);
            //alert($('#txtriskfactorid').val());
        },
    }


    function AddRiskFactorIndexTitle() {
        
        var result = ValidateRiskFactorIndexWeight($('#FactorIndexTable'), $('#FactorIndexTitleTable'), $('#txtFactorIndexId'), $('#Indextitleid'), $('#txtFactorIndexTitleWeight'));

        if (result) {

            var postData = {
                ProductCode: $('#txtFactorIndexTitleProductCode').val(),
                IndexTitleDescription: $('#txtFactorIndexTitle').val(),
                Weight: $('#txtFactorIndexTitleWeight').val(),
                FactorIndexId: $('#txtFactorIndexId').val(),
                IndexTitleId: $('#Indextitleid').val()
            };

            cn.ajax({
                url: '@Url.Content("~/CreditAssessmentIndexTitle/SaveFormJson")',
                type: "post",
                data: postData,
                success: function (obj) {
                    if (obj.Tag == 1) {

                        cn.msgSuccess(obj.Message);
                        //parent.searchGrid();
                        parent.layer.close(index);
                    }
                    else {
                        cn.msgError(obj.Message);
                    }
                }
            });
        }

    }


    function indexTitleFormatter(value, row, index) {
        return [
            '<div class="btn-group" role="group" aria-label="Basic example">' +
            '<button type="button" class="edittitle btn btn-sm btn-xs btn-danger" title="Edit Index Title">' +
            '<i class="now-ui-icons design_bullet-list-67"></i>' + ' </button > ' +
            '</div>'
        ].join('');
    }
    window.indexTitleEvents = {
        'click .edittitle': function (e, value, row, index) {
            $('#txtFactorIndexTitleProductCode').val(row.ProductCode);
            $('#txtFactorIndexTitle').val(row.IndexTitleDescription);
            $('#txtFactorIndexTitleWeight').val(row.Weight);
            $('#Indextitleid').val(row.IndexTitleId);
            //alert($('#txtriskfactorid').val());
        },
    }


    function AddIndex() {
        var postData = {
            Productcode: $('#txtIndexProductCode').val(),
            Assessmentindex: $('#txtIndex').val(),
            Weight: $('#txtIndexWeight').val(),
            Indextitleid: $('#txtIndexTitleId').val(),
            Indexid: $('#Indexid').val()
        };
        cn.ajax({
            url: '@Url.Content("~/CreditAssessmentIndex/SaveFormJson")',
            type: "post",
            data: postData,
            success: function (obj) {
                if (obj.Tag == 1) {

                    cn.msgSuccess(obj.Message);
                    //parent.searchGrid();
                    parent.layer.close(index);
                }
                else {
                    cn.msgError(obj.Message);
                }
            }
        });
    }
    function indexFormatter(value, row, index) {
        return [
            '<div class="btn-group" role="group" aria-label="Basic example">' +
            '<button type="button" class="editindex btn btn-sm btn-xs btn-danger" title="Edit Assessment Index">' +
            '<i class="fa fa-list"></i>' + ' </button > ' +
            '</div>'
        ].join('');
    }
    window.indexEvents = {
        'click .editindex': function (e, value, row, index) {
            $('#txtIndexProductCode').val(row.productcode);
            $('#txtIndex').val(row.assessmentIndex);
            $('#txtIndexWeight').val(row.weight);
            $('#Indexid').val(row.indexId);
            //alert($('#txtriskfactorid').val());
        },
    }


    function ValidateRiskFactorWeight($upperTable, $lowerTable, $upperTableId, $lowerTableId, $lowerTableNewWeight) {

        var upperTableFactor = $upperTable.bootstrapTable('getData');
        var totalUpperTableWeight = 0;
        //test varaible
        var test = $upperTableId.val();
        $.each(upperTableFactor, function (index, itemUpperTable) {
            console.log(itemUpperTable.RiskFactorId);
            console.log(test);
            //Boolean result;
            if (itemUpperTable.RiskFactorId == parseInt(test)) {
                //result = true;
                //console.log(result);
                totalUpperTableWeight += parseInt(itemUpperTable.Weight);
            }
        });
        var lowerTableFactor = $lowerTable.bootstrapTable('getData');
        var totalLowerTableWeight = 0;
        /// If an update is being made to the weight.
        var factorIndexId = $lowerTableId.val();;
        var oldWeight = 0;
        ///
        $.each(lowerTableFactor, function (index, itemLowerTable) {
            totalLowerTableWeight += itemLowerTable.Weight;
            if (factorIndexId != 0 && itemLowerTable.FactorIndexId == factorIndexId) {
                oldWeight = itemLowerTable.Weight;
            }
        });
        var weight = $lowerTableNewWeight.val();
        var newWeight = totalLowerTableWeight + parseInt(weight) - oldWeight;
        if (totalUpperTableWeight < newWeight) {
            swal('Total weight should not exceed ' + totalUpperTableWeight);
            return false;
        }
        else {
            return true;
        }
    }

    function ValidateIndexTitleWeight($upperTable, $lowerTable, $upperTableId, $lowerTableId, $lowerTableNewWeight) {
        
        var upperTableFactor = $upperTable.bootstrapTable('getData');
        // alert(JSON.stringify(upperTableFactor));
        var totalUpperTableWeight = 0;
        $.each(upperTableFactor, function (index, itemUpperTable) {
            if (itemUpperTable.IndexTitleId == $upperTableId.val()) {
                totalUpperTableWeight += itemUpperTable.Weight;
            }
        });
        var lowerTableFactor = $lowerTable.bootstrapTable('getData');
        var totalLowerTableWeight = 0;
        /// If an update is being made to the weight.
        var indexId = $lowerTableId.val();;
        var oldWeight = 0;
        ///
        $.each(lowerTableFactor, function (index, itemLowerTable) {
            totalLowerTableWeight += itemLowerTable.Weight;
            if (indexId != 0 && itemLowerTable.IndexId == indexId) {
                oldWeight = itemLowerTable.Weight;
            }
        });
        var weight = $lowerTableNewWeight.val();
        var newWeight = totalLowerTableWeight + parseInt(Weight) - oldWeight;
        if (totalUpperTableWeight < newWeight) {
            swal('Total weight should not exceed ' + totalUpperTableWeight);
            return false;
        }
        else {
            return true;
        }
    }

    function ValidateRiskFactorIndexWeight($upperTable, $lowerTable, $upperTableId, $lowerTableId, $lowerTableNewWeight) {

        var upperTableFactor = $upperTable.bootstrapTable('getData');
        //alert(JSON.stringify(upperTableFactor));
        var totalUpperTableWeight = 0;
        var test = $upperTableId.val();
        $.each(upperTableFactor, function (index, itemUpperTable) {
            console.log(itemUpperTable.FactorIndexId);
            console.log(test);

            if (itemUpperTable.FactorIndexId == parseInt(test)) {
                totalUpperTableWeight += parseInt(itemUpperTable.Weight);
            }
        });
        var lowerTableFactor = $lowerTable.bootstrapTable('getData');
        var totalLowerTableWeight = 0;
        /// If an update is being made to the weight.
        var indexTitleId = $lowerTableId.val();;
        var oldWeight = 0;
        ///
        $.each(lowerTableFactor, function (index, itemLowerTable) {
            totalLowerTableWeight += itemLowerTable.Weight;
            if (indexTitleId != 0 && itemLowerTable.IndexTitleId == indexTitleId) {
                oldWeight = itemLowerTable.Weight;
            }
        });
        var weight = $lowerTableNewWeight.val();
        var newWeight = totalLowerTableWeight + parseInt(Weight) - oldWeight;
        if (totalUpperTableWeight < newWeight) {
            swal('Total weight will be more than ' + totalUpperTableWeight);
            return false;
        }
        else {
            return true;
        }
    }



        // Define the radioButtonFormatter function outside of the HTML string
        function radioButtonFormatter(value, row, index) {
            return '<input type="radio" name="radioGroup" data-index="' + index + '">';
        }

        // Define the event handler for radio buttons
        $(document).on('change', 'input[name="radioGroup"]', function () {
            var selectedIndex = $(this).data('index');
            // Handle selected row based on selectedIndex
        });
    $(function () {
        initGrid();
    });



    function initGrid() {
       
        var queryUrl = '@Url.Content("~/CreditType/GetListJson")';
        $('#productAssessmentSetupTable').cnTable({
            url: queryUrl,
            columns: [
                //{ checkbox: false, visible: false },
                { field: 'Code', title: 'Code', visible: true },
                { field: 'Name', title: 'Product', visible: true },
            ],
            detailView: true,

            onExpandRow: function (index, row, $detail) {

                var riskFactorUrl = '@Url.Content("~/CreditAssessmentRiskFactor/GetListJson")' + '?productcode=' + row.Code;
                $('#productAssessmentSetupTable').find('.detail-view').each(function () {
                    if (!$(this).is($detail.parent())) {
                        $(this).prev().find('.detail-icon').click()
                    }
                })
                

                $detail.html(

                    '<div class="card"><div class="card-header"> <h6 class="card-title text-center"> <small class="description"> Add Risk Factor for ' + row.Name + '</small></h6></div >' +
                    '<div class="card-body"><div class="row">' +
                    '<div class="col-sm-4"> Risk Factor: <input type="text" id="txtRiskFactor" placeholder="Risk Factor" class="form-control text-right" /></div>' +
                    '<div class="col-sm-4"> Weight: <input type="text" id="txtRiskFactorWeight" placeholder="Weight" class="form-control text-right" /></div>' +
                    '<div class="col-sm-4 text-right"> <br/> <input type="hidden" id="iid"/> <input type="hidden" id="riskfactorid"/> <input type="hidden" id="txtRiskFactorProductCode" value=' + row.Code + ' />' +

                    '<button id="btnAddRiskFactor" type="button" onclick="AddRiskFactor();" class="btn btn-sm btn-success"  title="Register Risk">Register Risk<i class="fa fa-check"></i></button>' +
                    '</div></div>' +
                    '<br/><table class="data-table" ' +
                    'data-url=' + riskFactorUrl + ' ' +
                    'id="FactorTable"' +
                    'data-toggle="table" >' +
                    '<thead><tr>' +
                    '<th data-field="RiskFactorsDescription"><b>Risk Factor</b></th>' +
                    '<th data-field="Weight"><b>Weight</b></th>' +
                    '<th data-events="riskEvents" data-width="10%" data-formatter="riskFormatter"></th>' +
                    '</tr></thead>' +
                    '</table></div></div>').find('table').bootstrapTable({
                        detailView: true,
                        onExpandRow: function (factorindex, factorrow, $factorindexdetail) {
                            var riskFactorIndexUrl = '@Url.Content("~/CreditAssessmentFactorIndex/GetListJson")' + '?riskFactorId=' + factorrow.RiskFactorId;

                            $('#FactorTable').find('.detail-view').each(function () {
                                if (!$(this).is($factorindexdetail.parent())) {
                                    $(this).prev().find('.detail-icon').click()
                                }
                            });



                            $factorindexdetail.html('<div class="card"><div class="card-header"> <h6 class="card-title text-center"> <small class="description"> Add Risk Factor Index for ' + factorrow.RiskFactorsDescription + '</small></h6></div >' +
                                '<div class="card-body"><div class="row">' +
                                '<div class="col-sm-4"> Risk Factor Index: <input type="text" id="txtRiskFactorIndex" placeholder="Risk Factor Index" class="form-control text-right" /></div>' +
                                '<div class="col-sm-4"> Weight: <input type="text" id="txtRiskFactorIndexWeight" placeholder="Weight" class="form-control text-right" /></div>' +
                                '<div class="col-sm-4 text-right"> <br/> <input type="hidden" id="Factorindexid"/> <input type="hidden" id="txtRiskFactorIndexProductCode" value=' + factorrow.ProductCode + ' />' +
                                '<input type="hidden" id="iid"/> <input type="hidden" id="txtriskfactorid" value=' + factorrow.RiskFactorId + ' />' +
                                '<button type="button" id="btnAddRiskFactorIndex" onclick="AddRiskFactorIndex();" class="btn btn-sm btn-success"  title="Register Risk">Register Risk Index<i class="fa fa-check"></i></a>' +
                                '</div></div>' +
                                '<br/><table class="data-table" ' +
                                'data-url=' + riskFactorIndexUrl + ' ' +
                                'id="FactorIndexTable"' +
                                'data-toggle="table" >' +
                                '<thead><tr>' +
                                '<th data-field="FactorIndexDescription"><b>Factor Index</b></th>' +
                                '<th data-field="Weight"><b>Weight</b></th>' +
                                '<th data-field="RadioButtonColumn" data-width="5%" data-formatter="radioButtonFormatter"></th>' + // Add the radio button column

                                '<th data-events="factorIndexEvents" data-width="10%" data-formatter="factorIndexFormatter"></th>' +
                                '</tr></thead>' +
                                '</table></div></div>').find('table').bootstrapTable({
                                    detailView: true,
                                    onExpandRow: function (titleindex, titlerow, $titledetail) {

                                        var riskFactorIndexTitleUrl = '@Url.Content("~/CreditAssessmentIndexTitle/GetListJson")' + '?factorIndexId=' + titlerow.FactorIndexId;
                                        //var riskfactorIndexTitleUrl = url_path2 + "/ListCreditAssessmentIndexTitle?factorIndexId=" + titlerow.factorindexid;
                                        $('#FactorIndexTable').find('.detail-view').each(function () {
                                            if (!$(this).is($titledetail.parent())) {
                                                $(this).prev().find('.detail-icon').click()
                                            }
                                        });
                                        
                                        

                                        $titledetail.html('<div class="card"><div class="card-header"> <h6 class="card-title text-center"> <small class="description"> Add Risk Factor Index for ' + titlerow.FactorIndexDescription + '</small></h6></div >' +
                                            '<div class="card-body"><div class="row">' +
                                            '<div class="col-sm-4"> Factor Index Title: <input type="text" id="txtFactorIndexTitle" placeholder="Factor Index Title" class="form-control text-right" /></div>' +
                                            '<div class="col-sm-4"> Weight: <input type="text" id="txtFactorIndexTitleWeight" placeholder="Weight" class="form-control text-right" /></div>' +
                                            '<div class="col-sm-4 text-right"> <br/><input type="hidden" id="Indextitleid"/> <input type="hidden" id="txtFactorIndexTitleProductCode" value=' + titlerow.ProductCode + ' />' +
                                            '<input type="hidden" id="txtFactorIndexId" value=' + titlerow.FactorIndexId + ' />' +
                                            '<button type="button" id="btnAddRiskFactorIndextitle" onclick="AddRiskFactorIndexTitle();" class="btn btn-sm btn-success"  title="Register Risk">Register Risk Index Title<i class="fa fa-check"></i></a>' +
                                            '</div></div>' +
                                            '<br/><table class="data-table" ' +
                                            'data-url=' + riskFactorIndexTitleUrl + ' ' +
                                            'id="FactorIndexTitleTable"' +
                                            'data-toggle="table" >' +
                                            '<thead><tr>' +
                                            '<th data-field="IndexTitleDescription"><b>Index Title</b></th>' +
                                            '<th data-field="Weight"><b>Weight</b></th>' +
                                            '<th data-events="indexTitleEvents" data-width="10%" data-formatter="indexTitleFormatter"></th>' +
                                            '</tr></thead>' +
                                            '</table></div></div>').find('table').bootstrapTable({
                                                detailView: true,
                                                onExpandRow: function (iindex, indexrow, $indexdetail) {
                                                    var indexUrl = '@Url.Content("~/CreditAssessmentIndex/GetListJson")' + '?indexTitleId=' + indexrow.IndexTitleId;

                                                    $('#FactorIndexTitleTable').find('.detail-view').each(function () {
                                                        if (!$(this).is($indexdetail.parent())) {
                                                            $(this).prev().find('.detail-icon').click()
                                                        }
                                                    })

                                                    $indexdetail.html('<div class="card"><div class="card-header"> <h6 class="card-title text-center"> <small class="description"> Add Assessment Index for ' + indexrow.IndexTitleDescription + '</small></h6></div >' +
                                                        '<div class="card-body"><div class="row">' +
                                                        '<div class="col-md-6"> Assessment Index: <input type="text" id="txtIndex" placeholder="Index" class="form-control" /></div>' +
                                                        '<div class="col-md-4"> Weight: <input type="text" id="txtIndexWeight" placeholder="Weight" class="form-control text-right" /></div>' +
                                                        '<div class="col-md-2"> <br/><input type="hidden" id="Indexid"/>  <input type="hidden" id="txtIndexProductCode" value=' + indexrow.ProductCode + ' />' +
                                                        '<input type="hidden" id="txtIndexTitleId" value=' + indexrow.IndexTitleId + ' />' +
                                                        '<button type="button" id="btnAddIndex" onclick="AddIndex();" class="btn btn-sm btn-default"  title="Register Risk"><i class="now-ui-icons ui-1_check"></i></a>' +
                                                        '</div></div>' +
                                                        '<br/><table class="data-table" ' +
                                                        'data-url=' + indexUrl + ' ' +
                                                        'id="IndexTable"' +
                                                        'data-toggle="table" >' +
                                                        '<thead><tr>' +
                                                        '<th data-field="AssessmentIndex"><b>Index</b></th>' +
                                                        '<th data-field="Weight"><b>Weight</b></th>' +
                                                        '<th data-events="indexEvents" data-width="10%" data-formatter="indexFormatter"></th>' +
                                                        '</tr></thead>' +
                                                        '</table></div></div>').find('table').bootstrapTable({});
                                                }
                                            });

                                    }
                                });
                        }
                    });
            }
        });

    }
    
 </script>



