@{
    Layout = "~/Views/Shared/_Index.cshtml";
}

<div class="wrapper wrapper-content animated fadeIn">
    <div class="row">
        <div class="col-sm-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>LOAN SCHEDULE</h5>
                </div>
                <div class="ibox-content">
                    <div class="tabs-container">
                        <ul class="nav nav-tabs">
                            <li class="active">
                                
                                <a data-toggle="tab" href="#creditSchedule" aria-expanded="true"> Approved Loan</a>
                            </li>
                            <li>
                                <a data-toggle="tab" href="#debitSchedule" aria-expanded="false"> Batched Loan</a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div id="creditSchedule" class="tab-pane active">
                                <div class="panel-body">
                                    <div class="container-div">
                                        <div class="row">
                                            <button id="btnAdd" class="btn btn-primary" >Batch Loan</button>

                                           
                                            <div class="col-sm-12">
                                                <table id="gridTable" data-mobile-responsive="true"></table>
                                            </div>
                                            
                                        </div>
                                    </div>

                                    <script type="text/javascript">
                                        $(function () {
                                            initGrid();

                                            $("#status").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(StatusEnum).EnumToDictionaryString())) });

                                            laydate.render({ elem: '#startTime', format: 'yyyy-MM-dd', theme: 'molv' });
                                            laydate.render({ elem: '#endTime', format: 'yyyy-MM-dd', theme: 'molv' });
                                        });

                                        function initGrid() {
                                            var queryUrl = '@Url.Content("~/Underwriting/GetLoanForBatching")';
                                            $('#gridTable').cnTable({
                                                url: queryUrl,
                                                detailView: true,
                                                sortName: 'BaseModifyTime',
                                                sortOrder: "Desc",
                                                columns: [
                                                    { checkbox: true, visible: true },
                                                    { field: 'Id', title: 'Id', visible: false },
                                                    { field: 'NHFNumber', title: 'NHF Number', sortable: false },
                                                    { field: 'ProductName', title: 'Product Name', sortable: false },
                                                    {
                                                        field: 'Tenor', title: 'Tenor', sortable: false, formatter: function (value) {
                                                            if (value <= 1) {
                                                                return value + " year";
                                                            } else {
                                                                return value + " years";
                                                            }

                                                        }
                                                    },
                                                    {
                                                        field: 'InterestRate', title: 'Interest Rate', sortable: false, formatter: function (value) {
                                                            return value + "%";
                                                        }
                                                    },
                                                    { field: 'LoanAmount', title: 'Loan Amount', sortable: false },
                                                    // { field: 'ReferenceNumber', title: 'Loan Reference Number', visible: true, sortable: false },
                                                    {
                                                        field: 'BaseModifyTime', title: 'Create Time', formatter: function (value, row, index) {
                                                            return cn.formatDate(value, "yyyy-MM-dd HH:mm:ss");
                                                        }
                                                    },

                                                ],
                                                queryParams: function (params) {
                                                    var pagination = $('#gridTable').cnTable('getPagination', params);
                                                    var queryString = $("#searchDiv").getWebControls(pagination);
                                                    return queryString;
                                                },
                                                onExpandRow: function (index, row, $detail) {
                                                    initChildGrid(index, row, $detail);
                                                }
                                            });
                                        }


                                        function searchGrid() {
                                            $('#gridTable').cnTable('search');
                                            resetToolbarStatus();
                                        }


                                    </script>
                                </div>
                            </div>

                            <div id="debitSchedule" class="tab-pane">
                                <div class="panel-body">
                                    <div class="container-div">
                                        <div class="row">

                                            <div class="col-sm-12">
                                                <table id="gridTable2" data-mobile-responsive="true"></table>
                                            </div>
                                        </div>
                                    </div>

                                    <script type="text/javascript">
                                        $(function () {
                                            initGrid2();

                                            $("#status").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(StatusEnum).EnumToDictionaryString())) });

                                            laydate.render({ elem: '#startTime', format: 'yyyy-MM-dd', theme: 'molv' });
                                            laydate.render({ elem: '#endTime', format: 'yyyy-MM-dd', theme: 'molv' });
                                        });

                                        function initGrid2() {
                                            var queryUrl = '@Url.Content("~/Underwriting/GetBatchedLoan")';
                                            $('#gridTable2').cnTable({
                                                url: queryUrl,
                                                columns: [
                                                    { checkbox: true, visible: true },
                                                    { field: 'Id', title: 'Id', visible: false },
                                                    // {
                                                    //     field: 'totalAmount', title: 'Total Amount', sortable: false, formatter: function (value) {
                                                    //         return value;
                                                    //     }
                                                    // },

                                                    { field: 'BatchRefNo', title: 'Batch Ref', sortable: false },
                                                    //{
                                                    //    field: 'Tenor', title: 'Tenor', sortable: false, formatter: function (value) {
                                                    //        return value + " years";
                                                    //    }
                                                    //},
                                                    //{
                                                    //    field: 'InterestRate', title: 'Interest Rate', sortable: false, formatter: function (value) {
                                                    //        return value + "%";
                                                    //    }
                                                    //},
                                                    { field: 'pmb', title: 'PMB', sortable: false },
                                                    //// { field: 'ReferenceNumber', title: 'Loan Reference Number', visible: true, sortable: false },
                                                    //{
                                                    //    field: 'BaseModifyTime', title: 'Create Time', formatter: function (value, row, index) {
                                                    //        return cn.formatDate(value, "yyyy-MM-dd HH:mm:ss");
                                                    //    }
                                                    //},
                                                    {
                                                        title: 'Action',
                                                        align: 'center',
                                                        formatter: function (value, row, index) {
                                                            var actions = [];
                                                            actions.push('<a class="btn btn-warning btn-xs" href="#" onclick="showLoan(\'' + row.Id + '\')"><i class="fa fa-eye"></i>View Loans</a>');
                                                            actions.push('&nbsp;');
                                                            actions.push('<a class="btn btn-primary btn-xs" href="#" onclick="SendLoan(\'' + row.Id + '\')"><i class="fa fa-send-o"></i>Send</a>');

                                                            return actions.join('');
                                                        }
                                                    },


                                                ],
                                                queryParams: function (params) {
                                                    var pagination = $('#gridTable').cnTable('getPagination', params);
                                                    var queryString = $("#searchDiv").getWebControls(pagination);
                                                    return queryString;
                                                }
                                            });
                                        }



                                        function searchGrid() {
                                            $('#gridTable').cnTable('search');
                                            resetToolbarStatus();
                                        }


                                    </script>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<script src="https://unpkg.com/bootstrap-table@1.14.2/dist/bootstrap-table.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/7.2.0/sweetalert2.all.min.js"></script>

@*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>*@


<script type="text/javascript">
    $('#btnAdd').on('click', function () {

        var allData = $('#gridTable').bootstrapTable('getAllSelections');
        if (allData.length > 0) {
            BatchTransaction();

        } else {
            $("#btnAdd").removeAttr("disabled", true);

            swal("You have not selected any transaction(s)");
        }

    });

    function BatchTransaction() {

        SingleData = $('#gridTable').bootstrapTable('getAllSelections');
        if (SingleData["length"] !== 0) {

            swal({
                title: "Are you sure?",
                text: "Loan(s) will be batched!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#ff9800",
                confirmButtonText: "Yes, continue",
                cancelButtonText: "No, stop!",
                showLoaderOnConfirm: true,
                preConfirm: function () {
                    return new Promise(function (resolve) {
                        setTimeout(function () {
                            resolve();
                        }, 4000);
                    });
                }
            }).then(function (isConfirm) {
                if (isConfirm.value) {
                    swal({
                        title: 'Batching Loan(s)...',
                        html: 'Please wait...',
                        showConfirmButton: false,
                        allowEscapeKey: false,
                        allowOutsideClick: false,
                        didOpen: () => {
                            swal.showLoading();
                        }
                    });

                    if (SingleData["length"] !== 0) {

                        $.ajax({
                            url: '/Underwriting/BatchLoan',
                            type: 'POST',
                            data: { lists: JSON.stringify(SingleData) },
                            dataType: 'json',
                            success: function (result) {

                                debugger
                                if (result.Tag == 1) {
                                    swal({ title: 'Loan Batching ', text: result.Message.toString(), type: 'success' }).then(function () { window.location.reload(false); });

                                    parent.searchGrid();

                                    $("#btnAdd").removeAttr("disabled", true);
                                    return;

                                }
                                else {
                                    swal({ title: 'Loan Batching', text: result.Messages.toString(), type: 'success' }).then(function () { window.location.reload(true); });

                                    $('#gridTable').bootstrapTable('refresh', {
                                        silent: true
                                    });
                                    $("#btnAdd").removeAttr("disabled", true);
                                    return;
                                }
                            },
                            error: function (e) {
                                swal({ title: 'Loan Batching', text: 'Loan Batch encountered an error', type: 'error' }).then(function () { });

                            }
                        });

                    }

                } else {
                    swal({ title: 'Loan Batching', text: 'You cancelled Loan Batching', type: 'info' }).then(function () { });

                }

            })


        } else {
            $("#btnAdd").removeAttr("disabled", true);

            swal("You have not selected any transaction(s)");
        }
    }


    function initChildGrid(index, row, $detail) {
        debugger
        $detail.html('Loading data ...');
        var date = new Date(row.BaseCreateTime);
        var dateOfEmployment = new Date(row.DateofEmployment);
        var formattedDateOfEmployment = dateOfEmployment.toLocaleDateString();

        var htmlData =
            '<div class="card">' +
            '<div class="card-header text-center" > ' +
            '<h6 class="card-title" style="font-weight: bold; color: black; font-size: 15px;">Loan Approval for' + row.Name + '</h6>' +
            '</div>' +
            '<div class="card-body">' +
            '<form>' +
            '<div class="form-row">' +
            '<div class="form-group col-sm-6">' +
            '<label for="nhfNumber">NHF Number:</label>' +
            '<input type="text" id="nhfNumber" name="NHFNumber" placeholder="NHF Number" class="form-control text-left" readonly value="' + row.NHFNumber + '" /> ' +
            '</div>' +
            '<div class="form-group col-sm-6">' +
            '<label for="monthlyIncome">Monthly Income:</label>' +
            '<input type="text" id="monthlyIncome" name="MonthlyIncome" placeholder="Monthly Income" class="form-control text-left" readonly value="' + row.MonthlyIncome + '"/>' +
            '</div>' +
            '</div>' +
            '<div class="form-row">' +
            '<div class="form-group col-sm-6">' +
            '<label for="phone">Date Of Employment:</label>' +
            '<input type="text" id="dateOfEmployment" name="DateOfEmployment" placeholder="Date Of Employment" class="form-control text-left" readonly value="' + formattedDateOfEmployment + '"/>' +
            '</div>' +
            '</div>' +
            '<div class="form-row">' +
            '<div class="form-group col-sm-6">' +
            '<label for="dateOfBirth">Date Of Birth:</label>' +
            '<input type="text" id="dateOfBirth" name="DateOfBirth" placeholder="Date Of Birth" class="form-control text-left" readonly value="' + row.DOB + '"/>' +
            '</div>' +
            '<div class="form-group col-sm-6">' +
            '<label for="bvn">BVN:</label>' +
            '<input type="text" id="bvn" name="bvn" placeholder="BVN" class="form-control text-left" readonly value="' + row.Bvn + '"/>' +
            '</div>' +
            '</div>' +
            '<div class="form-group col-sm-6">' +
            '<label for="remark">Remark:</label>' +
            '<textarea id="remark" name="Remark" placeholder="Remark" class="form-control text-left" style="height:60px" value="' + row.Remark + '" />' +
            '</div>' +
            '</div>' +
            '</form>' +
            '</div>';
        $detail.html(htmlData);
        // Attach click event to the plus icon
        $detail.find('.card-header').click(function () {
            var $cardBody = $(this).siblings('.card-body');
            if ($cardBody.is(':visible')) {
                $cardBody.hide();
            } else {
                $cardBody.show();
            }
        });
    }

    function openCustomDialog(options) {
        layer.open({
            type: 2,
            title: options.title,
            content: options.content,
            area: [options.width, '90%'],
            btn: [], // Include a close button
            yes: function (index, layero) {
                // This function will be called when the close button is clicked
                layer.close(index);
            },
            success: function (layero, index) {
                options.callback(index, layero);
            }
        });
    }


    function showLoan(id) {
        if (id < 1) {
            cn.msgError("Please selet an item");
        }
        openCustomDialog({
            title: "Batched Loans",
            content: '@Url.Content("~/Underwriting/BatchedLoans")' + '?id=' + id,
            width: "780px",
            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
                //iframeWin.saveForm(index);
            }
        });
    }


    function SendLoan() {

        SingleData = $('#gridTable2').bootstrapTable('getAllSelections');
        if (SingleData["length"] !== 0) {

            swal({
                title: "Are you sure?",
                text: "Loan Application!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#ff9800",
                confirmButtonText: "Yes, continue",
                cancelButtonText: "No, stop!",
                showLoaderOnConfirm: true,
                preConfirm: function () {
                    return new Promise(function (resolve) {
                        setTimeout(function () {
                            resolve();
                        }, 4000);
                    });
                }

            }).then(function (isConfirm) {
                if (isConfirm.value) {
                    swal({
                        title: 'Loan Application...',
                        html: 'Please wait...',
                        showConfirmButton: false,
                        allowEscapeKey: false,
                        allowOutsideClick: false,
                        didOpen: () => {
                            swal.showLoading();
                        }
                    });

                    if (SingleData["length"] !== 0) {

                        $.ajax({
                            url: '/Underwriting/ApplyLoan',
                            type: 'POST',
                            data: { lists: JSON.stringify(SingleData) },
                            dataType: 'json',
                            success: function (Obj) {

                                if (Obj.Tag == 1) {
                                    debugger
                                    swal({ title: 'Loan Application ', text: Obj.Message, type: 'success' }).then(function () { window.location.reload(false); });

                                }
                                else {
                                    swal({ title: 'Loan Application', text: Obj.Message, type: 'error' }).then(function () { });


                                }
                            },
                            error: function (e) {
                                swal({ title: 'Loan Application', text: 'Loan Application encountered an error', type: 'error' }).then(function () { });

                            }
                        });

                    }

                } else {
                    swal({ title: 'Loan Application', text: 'You cancelled Loan Application', type: 'info' }).then(function () { });

                }

            })


        } else {
            $("#btnAdd").removeAttr("disabled", true);

            swal("You have not selected any transaction(s)");
        }
    }








</script>