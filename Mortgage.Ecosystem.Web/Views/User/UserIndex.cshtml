@{
    Layout = "~/Views/Shared/_Index.cshtml";
}
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment HostingEnvironment
@section header{
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/zTree/v3/css/metroStyle/metroStyle.min.css"))
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/zTree/v3/js/ztree.min.js"))

    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/jquery.layout/1.4.4/jquery.layout-latest.min.css"))
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/jquery.layout/1.4.4/jquery.layout-latest.min.js"))
}

<div class="ui-layout-west">
    <div class="main-content">
        <div class="box box-main">
            <div class="box-header">
                <div class="box-title" style="font-weight:bold;">
                    Employer List
                </div>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" id="btnExpand" title="Expand" style="display:none;"><i class="fa fa-chevron-up"></i></button>
                    <button type="button" class="btn btn-box-tool" id="btnCollapse" title="Fold"><i class="fa fa-chevron-down"></i></button>
                    <button type="button" class="btn btn-box-tool" id="btnRefresh" title="Refresh Company"><i class="fa fa-refresh"></i></button>
                </div>
            </div>
            <div class="ui-layout-content">
                <div id="companyTree" class="ztree"></div>
            </div>
        </div>
    </div>
</div>

<div class="container-div ui-layout-center">
    <div class="row">
        <div id="searchDiv" class="col-sm-12 search-collapse">
            <input type="hidden" id="company" col="Company">
            <div class="select-list">
                <ul>
                    <li>
                        <label>Username：</label><input id="userName" col="UserName" type="text" />
                    </li>
                    <li>
                        <label>Mobile：</label><input id="mobile" col="Mobile" type="text" />
                    </li>
                    <li>
                        <label>User Status：</label><span id="userStatus" col="UserStatus"></span>
                    </li>
                    <li class="select-time">
                        <label>Creation Time： </label>
                        <input id="startTime" col="StartTime" type="text" class="time-input" placeholder="Starting Time" />
                        <span>-</span>
                        <input id="endTime" col="EndTime" type="text" class="time-input" placeholder=" Finish Time" />
                    </li>
                    <li>
                        <a id="btnSearch" class="btn btn-primary btn-sm" onclick="searchGrid()"><i class="fa fa-search"></i>&nbsp;Search</a>
                    </li>
                </ul>
            </div>
        </div>

        <div id="toolbar" class="btn-group-sm">
            <a id="btnAdd" class="btn btn-success" onclick="showSaveForm(true)"><i class="fa fa-plus"></i> New</a>
            <a id="btnEdit" class="btn btn-primary disabled" onclick="showSaveForm(false)"><i class="fa fa-edit"></i> Edit</a>
            <a id="btnDelete" class="btn btn-danger disabled" onclick="deleteForm()"><i class="fa fa-remove"></i> Delete</a>
            <a id="btnImport" class="btn btn-info" onclick="importForm()"><i class="fa fa-upload"></i> Import</a>
            <a id="btnExport" class="btn btn-warning" onclick="exportForm()"><i class="fa fa-download"></i> Export</a>
        </div>

        <div class="col-sm-12 select-table table-striped">
            <table id="gridTable" data-mobile-responsive="true"></table>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        initGrid();
        initTree();

        $('body').layout({ west__size: 185 });

        laydate.render({ elem: '#startTime', format: 'yyyy-MM-dd', theme: 'molv' });
        laydate.render({ elem: '#endTime', format: 'yyyy-MM-dd', theme: 'molv' });

        $("#userStatus").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(StatusEnum).EnumToDictionaryString())) });

        $('#btnExpand').click(function () {
            var tree = $.fn.zTree.getZTreeObj("companyTree");
            tree.expandAll(true);
            $(this).hide();
            $('#btnCollapse').show();
        });

        $('#btnCollapse').click(function () {
            var tree = $.fn.zTree.getZTreeObj("companyTree");
            tree.expandAll(false);
            $(this).hide();
            $('#btnExpand').show();
        });

        $('#btnRefresh').click(function () {
            initTree();
        });
    });

    function initTree() {
        $('#companyTree').cnTree({
            url: '@Url.Content("~/Company/GetCompanyTreeListJson")',
            async: true,
            expandLevel: 2,
            maxHeight: "700px",
            callback: {
                onClick: function (event, treeId, treeNode) {
                    $("#company").val(treeNode.id);
                    searchGrid();
                }
            }
        });
    }

    function initGrid() {
        var queryUrl = '@Url.Content("~/User/GetPageListJson")';
        $('#gridTable').cnTable({
            url: queryUrl,
            columns: [
                { checkbox: true, visible: true },
                { field: 'Id', title: 'Id', visible: false },
                { field: 'CompanyName', title: 'Employer' },
                { field: 'UserName', title: 'Login Name', sortable: true },
                { field: 'RealName', title: 'Name', sortable: false },
                { field: 'Mobile', title: 'Mobile Phone', sortable: false },
                {
                    field: 'UserStatus', title: 'Status', formatter: function (value, row, index) {
                        if (row.UserStatus == "@StatusEnum.Yes.ParseToInt()") {
                            return '<span class="badge badge-primary">' + "@StatusEnum.Yes.GetDescription()" + '</span>';
                        } else {
                            return '<span class="badge badge-warning">' + "@StatusEnum.No.GetDescription()" + '</span>';
                        }
                    }
                },
                {
                    field: 'BaseModifyTime', title: 'Creation time', formatter: function (value, row, index) {
                        return cn.formatDate(value, "yyyy-MM-dd HH:mm:ss");
                    }
                },
                {
                    title: 'Operate',
                    align: 'center',
                    formatter: function (value, row, index) {
                        var actions = [];
                        actions.push('<a class="btn btn-warning btn-xs" href="#" onclick="showResetPasswordForm(\'' + row.Id + '\')"><i class="fa fa-key"></i>Reset</a>');
                        return actions.join('');
                    }
                }
            ],
            queryParams: function (params) {
                var pagination = $('#gridTable').cnTable('getPagination', params);
                var quercntring = $("#searchDiv").getWebControls(pagination);
                return quercntring;
            }
        });
    }

    function searchGrid() {
        $('#gridTable').cnTable('search');
        resetToolbarStatus();
    }

    function showSaveForm(bAdd) {
        var id = 0;
        if (!bAdd) {
            var selectedRow = $("#gridTable").bootstrapTable("getSelections");
            if (!cn.checkRowEdit(selectedRow)) {
                return;
            }
            else {
                id = selectedRow[0].Id;
            }
        }
        cn.openDialog({
            title: id > 0 ? "Edit User Login Profile" : "Add User Login Profile",
            content: '@Url.Content("~/User/UserForm")' + '?id=' + id,
            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
                iframeWin.saveForm(index);
            }
        });
    }

    function deleteForm() {
        var selectedRow = $("#gridTable").bootstrapTable("getSelections");
        if (cn.checkRowDelete(selectedRow)) {
            cn.confirm("Confirm to be selected by delete" + selectedRow.length + "iece of data?？", function () {
                var ids = cn.getIds(selectedRow);
                cn.ajax({
                    url: '@Url.Content("~/User/DeleteFormJson")' + '?ids=' + ids,
                    type: "post",
                    error: cn.ajaxError,
                    success: function (obj) {
                        if (obj.Tag == 1) {
                            cn.msgSuccess(obj.Message);
                            searchGrid();
                        }
                        else {
                            cn.msgError(obj.Message);
                        }
                    }
                });
            });
        }
    }

    function showCompanyForm() {
        var url = '@Url.Content("~/Company/CompanyIndex")';
        createMenuItem(url, "Company Management");
    }

    function showResetPasswordForm(id) {
        cn.openDialog({
            title: "Reset Password",
            content: '@Url.Content("~/User/ResetPassword")' + '?id=' + id,
            height: "220px",
            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
                iframeWin.saveForm(index);
            }
        });
    }

    function exportForm() {
        var url = '@Url.Content("~/User/ExportUserJson")';
        var postData = $("#searchDiv").getWebControls();
        cn.exportExcel(url, postData);
    }

    function importForm() {
        cn.openDialog({
            title: "Import User Data",
            content: '@Url.Content("~/User/UserImport")',
            height: "280px",
            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
                iframeWin.saveForm(index);
            }
        });
    }
</script>
