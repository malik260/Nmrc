@{
    Layout = "~/Views/Shared/_FormWhite.cshtml";
}

@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment HostingEnvironment
@section header{
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/fileinput/5.0.3/css/fileinput.min.css"))
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/fileinput/5.0.3/js/fileinput.min.js"))
}

    <div class="wrapper animated fadeInRight">
        <form id="form" class="form-horizontal m">
            <div class="form-group">
                <label class="col-sm-2 control-label ">Select file</label>
                <div class="col-sm-10">
                    <input id="importFile" type="file">
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label "></label>
                <div class="col-sm-4">
                    <div id="isOverride" col="IsOverride"></div>
                </div>
                <div class="control-label" style="text-align:left">
                    <a href='@Url.Content("~/template/Import User Template.xlsx")' class="btn btn-default btn-xs"><i class="fa fa-file-excel-o"> </i> Download Template</a>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label "></label>
                <div class="col-sm-10 text-danger">
                    Tip: Only "xls" or "xlsx" format files are allowed to be imported!
                </div>
            </div>
        </form>
    </div>

    <script type="text/javascript">
        var filePath = undefined;
        $(document).ready(function () {
            $("#isOverride").cnCheckBox({
                data: [{ Key: '1', Value: 'Whether to update existing user data' }]
            });

            $("#importFile").fileinput({
                language: 'en',
                'uploadUrl': '@Url.Content("~/File/UploadFile")' + '?fileModule=@UploadFileType.Import.ToInt()',
                showPreview: false,
                allowedFileExtensions: ['xls', 'xlsx']
            }).on("fileuploaded", function (event, data) {
                var obj = data.response;
                if (obj.Tag == 1) {
                    filePath = obj.Data;
                }
                else {
                    filePath = '';
                }
            });
        });

        function saveForm(index) {
            if (!filePath) {
                cn.alertError('The file was not uploaded or failed to upload');
                return;
            }

            var postData = $("#form").getWebControls();
            postData.FilePath = filePath;
            cn.ajax({
                url: '@Url.Content("~/User/ImportUserJson")',
                type: "post",
                data: postData,
                success: function (obj) {
                    if (obj.Tag == 1) {
                        cn.msgSuccess('Import successfully');
                        parent.searchGrid();
                        parent.layer.close(index);
                    }
                    else {
                        cn.msgError(obj.Message);
                    }
                }
            });
        }
    </script>