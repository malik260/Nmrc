@{    Layout = "~/Views/Shared/_Index.cshtml";}<div class="ibox-title">    <h5>E-TICKET</h5></div><div class="container-div">    <div class="row">        <div id="searchDiv" class="col-sm-12 search-collapse">            <div class="select-list">                <ul>                    <li>                        Ticket ID: <input id="requestNo" col="RequestNumber" type="text" />                    </li>                    <li>                        <a id="btnSearch" class="btn btn-primary btn-sm" onclick="searchGrid()"><i class="fa fa-search"></i>&nbsp;search</a>                    </li>                </ul>            </div>        </div>        <div class="col-sm-12 select-table table-striped">            <table id="gridTable" data-mobile-responsive="true"></table>        </div>    </div></div><script type="text/javascript">    $(function () {        initGrid();        $("#status").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(ETicketStatusEnum).EnumToDictionaryString())) });        laydate.render({ elem: '#startTime', format: 'yyyy-MM-dd', theme: 'molv' });        laydate.render({ elem: '#endTime', format: 'yyyy-MM-dd', theme: 'molv' });    });    function initGrid() {        var queryUrl = '@Url.Content("~/ETicket/GetEticketPageListJson")';        $('#gridTable').cnTable({            url: queryUrl,            columns: [                // { checkbox: true, visible: true },                { field: 'Id', title: 'Id', visible: false },                { field: 'RequestNumber', title: 'Ticket ID', sortable: true },                { field: 'MessageType', title: 'Message Type', sortable: true },                { field: 'Message', title: 'Message', sortable: true, visible: false },                { field: 'Subject', title: 'Subject', sortable: true },                { field: 'EmailAddress', title: 'Email Address', sortable: true },                // { field: 'DateSent', title: 'Date', sortable: true },                // { field: 'Status', title: 'Status', sortable: true },                {                    field: 'DateSent',                    title: 'Date Sent',                    sortable: true,                    formatter: function (value, row, index) {                        if (value) {                            var date = new Date(value);                            var day = String(date.getDate()).padStart(2, '0');                            var month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based                            var year = date.getFullYear();                            return `${day}-${month}-${year}`;                        }                        return '';                    }                },                {                    field: 'Status',                    title: 'Status',                    align: 'center',                    formatter: function (value, row, index) {                        if (value == "@ETicketStatusEnum.Pending.ToInt()") {                            return '<span class="badge badge-warning">' + "@ETicketStatusEnum.Pending.GetDescription()" + '</span>';                        } else if (value == "@ETicketStatusEnum.Closed.ToInt()") {                            return '<span class="badge badge-danger">' + "@ETicketStatusEnum.Closed.GetDescription()" + '</span>';                        } else {                            return '<span class="badge badge-info">' + "@ETicketStatusEnum.InProgress.GetDescription()" + '</span>';                        }                    }                },                // { field: 'Actions', title: 'Actions', visible: false, sortable: true },                {                    title: '',                    align: 'center',                    formatter: function (value, row, index) {                        var actions = [];                        actions.push('&nbsp;');                        actions.push('<a class="btn btn-success btn-xs" href="#" onclick="ShowDetails(\'' + row.Id + '\')"><i class="fa fa-eye"></i>View</a>');                        return actions.join('');                    }                },                //{                //    field: 'BaseModifyTime', title: 'Create Time', visible: false, formatter: function (value, row, index) {                //        return cn.formatDate(value, "yyyy-MM-dd HH:mm:ss");                //    }                //}            ],            queryParams: function (params) {                var pagination = $('#gridTable').cnTable('getPagination', params);                var queryString = $("#searchDiv").getWebControls(pagination);                return queryString;            }        });    }    function searchGrid(callBackId) {        var param = $("#searchDiv").getWebControls();        $('#gridTable').cnTreeTable('search', param);        if (callBackId) {            id = callBackId;        }    }    function searchGrid() {        $('#gridTable').cnTable('search');        resetToolbarStatus();    }    //function ShowDetails(id) {    //    openCustomDialog({    //        title: "Customer E-Ticket",    //        content: '@Url.Content("~/ETicket/EticketDetails")' + '?id=' + id,    //        width: "780px",    //        callback: function (index, layero) {    //            // No auto save    //        }    //    });    //}    function ShowDetails(id) {        openCustomDialog({            title: "E-Ticket Resolution",            content: '@Url.Content("~/ETicket/EticketDetails")' + '?id=' + id,            width: "780px",            callback: function (index, layero) {                loadStatus(id);            }        });    }    function openCustomDialog(options) {        layer.open({            type: 2,            title: options.title,            content: options.content,            area: [options.width, '90%'],            btn: ['Confirm', 'Close'], // Include a confirm and close button            yes: function (index, layero) {                // This function will be called when the confirm button is clicked                var iframeWin = window[layero.find('iframe')[0]['name']];                iframeWin.saveForm(index); // Trigger the save operation            },            btn2: function (index, layero) {                // This function will be called when the close button is clicked                layer.close(index);            },            success: function (layero, index) {                options.callback(index, layero);            }        });    }</script>