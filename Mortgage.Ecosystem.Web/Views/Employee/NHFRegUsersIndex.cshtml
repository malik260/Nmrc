@{
    Layout = "~/Views/Shared/_Index.cshtml";
}
<div class="container-div">
    <div class="row">
        <div class="ibox">
            <div class="tabs-container">
                <ul class="nav nav-tabs">
                    <li class="active">
                        <a data-toggle="tab" href="#employee" aria-expanded="true">Pending Employee Registration(s)</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div id="employee" class="tab-pane active">
                        <div class="panel-body">
                            <div class="container-div">
                                <div class="row">
                                    <div id="searchDiv" class="col-sm-12 search-collapse">
                                        <div class="select-list">
                                            <ul>
                                                <li>
                                                    <label>Name: </label> <input id="name" col="Name" type="text" />
                                                </li>
                                                <li class="select-time">
                                                    <label>Created: </label>
                                                    <input id="startTime" col="StartTime" type="text" class="time-input" placeholder="start time" />
                                                    <span>-</span>
                                                    <input id="endTime" col="EndTime" type="text" class="time-input" placeholder="end time" />
                                                </li>
                                                <li>
                                                    <a id="btnSearch" class="btn btn-primary btn-sm" onclick="searchEmployeeGrid()"><i class="fa fa-search"></i>&nbsp;Search</a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                    <div class="btn-group-sm" id="toolbar">
                                        <a id="btnView" class="btn btn-success disabled" onclick="showViewEmployeeForm(false)"><i class="fa fa-eye"></i> View</a>
                                        <a id="btnApprove" class="btn btn-primary disabled" onclick="approveEmployeeForm()"><i class="fa fa-check"></i> Approve</a>
                                        <a id="btnReject" class="btn btn-danger disabled" onclick="rejectEmployeeForm()"><i class="fa fa-remove"></i> Reject</a>
                                    </div>

                                    <div class="col-sm-12 select-table table-striped">
                                        <table id="gridTable" data-mobile-responsive="true"></table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="employer" class="tab-pane">
                        <div class="panel-body">
                            <div class="container-div">
                                <div class="row">
                                    <div id="searchDiv" class="col-sm-12 search-collapse">
                                        <div class="select-list">
                                            <ul>
                                                <li>
                                                    <label>Name: </label> <input id="name" col="Name" type="text" />
                                                </li>
                                                <li class="select-time">
                                                    <label>Created: </label>
                                                    <input id="startTime" col="StartTime" type="text" class="time-input" placeholder="start time" />
                                                    <span>-</span>
                                                    <input id="endTime" col="EndTime" type="text" class="time-input" placeholder="end time" />
                                                </li>
                                                <li>
                                                    <a id="btnSearch" class="btn btn-primary btn-sm" onclick="searchEmployerGrid()"><i class="fa fa-search"></i>&nbsp;Search</a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                    <div>
                                    </div>
                                    <div class="btn-group-sm" id="toolbar">
                                        <a id="btnEdit" class="btn btn-success" onclick="showViewEmployerForm(false)"><i class="fa fa-eye"></i> View</a>
                                    </div>

                                    <div class="col-sm-12 select-table table-striped">
                                        <table id="gridTable" data-mobile-responsive="true"></table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        initGrid();

        $("#status").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(StatusEnum).EnumToDictionaryString())) });

        laydate.render({ elem: '#startTime', format: 'yyyy-MM-dd' });
        laydate.render({ elem: '#endTime', format: 'yyyy-MM-dd' });
    });

    var fullName = "";


    function initGrid() {
        var queryEmployeeUrl = '@Url.Content("~/Employee/GetApprovalPageListJson")';

        var formOpen = false; // flag to track if form is currently open
        $('#gridTable').cnTable({
            url: queryEmployeeUrl,
            columns: [
                {
                    field: 'plus',
                    title: '',
                    formatter: function (value, row) {
                        var iconClass = formOpen ? 'fa fa-times' : 'fa fa-plus';
                        return '<button type="button" class="btn btn-sm btn-primary plus-button" data-row-id="' + row.Id + '"><i class="' + iconClass + '"></i></button>';
                    },
                    events: {
                        'click .plus-button': function (e, value, row, index) {
                            // toggle the form on/off
                            fullName = row.FirstName + ' ' + row.LastName;
                            $("#registrationHeader").text("NHF Registration for " + fullName);
                            if (formOpen) {
                                $('#myForm').slideUp();
                                $(this).removeClass('btn-danger').addClass('btn-primary'); // Change button background to btn-primary
                            } else {
                                var form = $('#myForm');
                                //var gen = row.GenderName;
                                form.find('input[name="EffectiveDate"]').val(row.BaseCreateTime);
                                form.find('input[name="Email"]').val(row.EmailAddress);
                                form.find('input[name="Phone"]').val(row.MobileNumber);
                                form.find('input[name="MaritalStatus"]').val(row.MaritalStatusName);
                                form.find('input[name="Gender"]').val(row.GenderName);
                                form.find('input[name="BVN"]').val(row.BVN);
                                form.find('input[name="NIN"]').val(row.NIN);
                                form.find('input[name="BankName"]').val(row.CustomerBank);
                                form.find('input[name="BankAccountNumber"]').val(row.BankAccountNumber);
                                form.find('input[name="ContributionLocation"]').val(row.ContributionBranchName);
                                form.find('input[name="RegistrationLocation"]').val(row.PostalAddress);
                                form.slideDown();
                                $(this).removeClass('btn-primary').addClass('btn-danger'); // Change button background to btn-danger
                            }
                            formOpen = !formOpen; // update flag

                            // update the plus button icon
                            var iconClass = formOpen ? 'fa fa-times' : 'fa fa-plus';
                            $(this).html('<i class="' + iconClass + '"></i>');
                        }

                    }
                },
                { checkbox: true, visible: true },
                { field: 'Id', title: 'Id', visible: false },
                { field: 'CompanyName', title: 'Company', sortable: true },
                { field: 'ContributionBranchName', title: 'Branch', visible: false, sortable: true },
                { field: 'DepartmentName', title: 'Department', visible: false, sortable: true },
                { field: 'TitleName', title: 'Title', visible: false, sortable: true },
                { field: 'FirstName', title: 'FirstName', sortable: true },
                { field: 'OtherName', title: 'Other Name(s)', sortable: true },
                { field: 'LastName', title: 'Last Name', sortable: true },
                { field: 'BVN', title: 'BVN', sortable: true },
                { field: 'NIN', title: 'NIN', visible: false, sortable: true },
                { field: 'GenderName', title: 'Gender', sortable: true },
                { field: 'DateOfBirth', title: 'Date Of Birth', visible: false, sortable: true },
                { field: 'MaritalStatusName', title: 'Marital Status', visible: false, sortable: true },
                { field: 'PostalAddress', title: 'Postal Address', visible: false, sortable: true },
                { field: 'EmailAddress', title: 'Email Address', visible: false, sortable: true },
                { field: 'MobileNumber', title: 'Mobile Number', sortable: true },
                {
                    field: 'EmploymentType', title: 'Employment Type', align: 'center',
                    formatter: function (value, row, index) {
                        if (value == "@EmploymentTypeEnum.Employed.ToInt()") {
                            return '<span class="badge badge-primary">' + "@EmploymentTypeEnum.Employed.GetDescription()" + '</span>';
                        } else {
                            return '<span class="badge badge-warning">' + "@EmploymentTypeEnum.SelfEmployed.GetDescription()" + '</span>';
                        }
                    }
                },
                { field: 'DateOfEmployment', title: 'Date Of Employment', visible: false, sortable: true },
                { field: 'StaffNumber', title: 'Staff Number', visible: false, sortable: true },
                { field: 'CustomerBank', title: 'Bank Name', visible: false, sortable: true },
                { field: 'BankAccountNumber', title: 'Account Number', visible: false, sortable: true },
                { field: 'AccountTypeName', title: 'Account Type', visible: false, sortable: true },
                { field: 'MonthlySalary', title: 'Monthly Salary', visible: false, sortable: true },
                { field: 'AlertTypeName', title: 'Alert Type', visible: false, sortable: true },
                {
                    field: 'BaseModifyTime', title: 'Create Time', visible: false, formatter: function (value, row, index) {
                        return cn.formatDate(value, "yyyy-MM-dd HH:mm:ss");
                    }
                }
            ],
            queryParams: function (params) {
                var pagination = $('#gridTable').cnTable('getPagination', params);
                var queryString = $("#searchDiv").getWebControls(pagination);
                return queryString;
            }
        });
        $('#myForm').hide();
    }

    function secondGrid() {
        var queryEmployerUrl = '@Url.Content("~/Company/GetApprovalPageListJson")';
        $('#gridTable').cnTable({
            url: queryEmployerUrl,
            columns: [
                { checkbox: true, visible: true },
                { field: 'Id', title: 'Id', visible: false },
                { field: 'Name', title: 'Name', sortable: true },
                { field: 'RCNumber', title: 'RC Number', sortable: true },
                { field: 'SectorName', title: 'Sector', sortable: true },
                { field: 'DateOfIncorporation', title: 'Date Of Incorporation', visible: false, sortable: true },
                { field: 'NatureOfBusiness', title: 'Nature Of Business', visible: false, sortable: true },
                { field: 'NameOfRegistrar', title: 'Name Of Registrar', visible: false, sortable: true },
                { field: 'CompanyClassName', title: 'Class', sortable: true },
                { field: 'CompanyTypeName', title: 'Type', sortable: true },
                {
                    field: 'Status', title: 'Status', align: 'center',
                    formatter: function (value, row, index) {
                        value = "1";
                        if (value == "@StatusEnum.Yes.ToInt()") {
                            return '<span class="badge badge-primary">' + "@StatusEnum.Yes.GetDescription()" + '</span>';
                        } else {
                            return '<span class="badge badge-warning">' + "@StatusEnum.No.GetDescription()" + '</span>';
                        }
                    }
                },
                {
                    field: 'BaseModifyTime', title: 'Create Time', formatter: function (value, row, index) {
                        return cn.formatDate(value, "yyyy-MM-dd HH:mm:ss");
                    }
                }
            ],
            queryParams: function (params) {
                var pagination = $('#gridTable').cnTable('getPagination', params);
                var queryString = $("#searchDiv").getWebControls(pagination);
                return queryString;
            }
        });
    }

    function searchEmployeeGrid() {
        $('#gridTable').cnTable('search');
        resetToolbarStatus();
    }

    function showViewEmployeeForm(bView) {
        var id = 0;
        if (!bView) {
            var selectedRow = $("#gridTable").bootstrapTable("getSelections");
            if (!cn.checkRowEdit(selectedRow)) {
                return;
            }
            else {
                id = selectedRow[0].Id;
            }
        }
        cn.openDialog({
            title: id > 0 ? "View Employee Record" : "",
            content: '@Url.Content("~/Employee/NHFRegUserForm")' + '?id=' + id,
            width: "780px",
            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
            }
        });
    }

    function showViewEmployerForm(bView) {
        var id = 0;
        if (!bView) {
            var selectedRow = $("#gridTable").bootstrapTable("getSelections");
            if (!cn.checkRowEdit(selectedRow)) {
                return;
            }
            else {
                id = selectedRow[0].Id;
            }
        }
        cn.openDialog({
            title: id > 0 ? "View Company Record" : "",
            content: '@Url.Content("~/Company/NHFRegUserForm")' + '?id=' + id,
            width: "780px",
        });
    }

    function approveEmployeeForm() {
        var selectedRow = $("#gridTable").bootstrapTable("getSelections");
        cn.confirm("Confirm to approve form?", function () {
            var id = selectedRow[0].Id;
            cn.ajax({
                url: '@Url.Content("~/Employee/ApproveFormJson")' + '?id=' + id,
                type: "post",
                success: function (obj) {
                    if (obj.Tag == 1) {
                        cn.msgSuccess(obj.Message);
                        searchGrid();
                    }
                    else {
                        cn.msgError(obj.Message);
                    }
                }
            });
        });
    }

    function rejectEmployeeForm() {
        var selectedRow = $("#gridTable").bootstrapTable("getSelections");
        cn.confirm("Confirm to reject this record?", function () {
            var id = selectedRow[0].Id;
            cn.ajax({
                url: '@Url.Content("~/Employee/RejectFormJson")' + '?id=' + id,
                type: "post",
                success: function (obj) {
                    if (obj.Tag == 1) {
                        cn.msgSuccess("Rejected");
                        searchGrid();
                    }
                    else {
                        cn.msgError(obj.Message);
                    }
                }
            });
        });
    }
</script>