@{
    Layout = "~/Views/Shared/_Index.cshtml";
}
<div class="ibox-title">
    <h5>AUDIT LOG TRAIL</h5>
</div>
<div class="container-div">
    <div class="row">

        <div class="btn-group-sm" id="toolbar">
        </div>

        <div class="col-sm-12 select-table table-striped">
            <table id="gridTable" data-mobile-responsive="true"></table>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        initGrid();

        $("#logStatus").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(OperateStatusEnum).EnumToDictionaryString())) });

        laydate.render({ elem: '#startTime', format: 'yyyy-MM-dd' });
        laydate.render({ elem: '#endTime', format: 'yyyy-MM-dd' });
    });

    function initGrid() {
        var queryUrl = '@Url.Content("~/AuditTrail/GetAdminAuditTailPage")';
        $('#gridTable').cnTable({
            url: queryUrl,
            columns: [
                { checkbox: true, visible: true },
                { field: 'Id', title: 'Id', visible: false },
                { field: 'UserName', title: 'login name', sortable: false },
                { field: 'Company', title: 'Company' },
                { field: 'Action', title: 'Action' },
                { field: 'ActionRoute', title: 'Action Route' },
                { field: 'IpAddress', title: 'Ip Address' },
                { field: 'MacAddress', title: 'Mac Address' },
                { field: 'Browser', title: 'Browser' },
                { field: 'TargetUserName', title: 'Target UserName' },
                { field: 'TargetUserId', title: 'Target UserID' },
                //{ field: 'TransactionDate', title: 'Transaction Date' },
                {
                    field: 'BaseCreateTime', title: 'Action Time', formatter: function (value, row, index) {
                        return cn.formatDate(value, "yyyy-MM-dd HH:mm:ss");
                    }
                }
            ],
            queryParams: function (params) {
                var pagination = $('#gridTable').cnTable('getPagination', params);
                var queryString = $("#searchDiv").getWebControls(pagination);
                return queryString;
            }
        });
    }

    function searchTreeGrid(callBackId) {
        var param = $("#searchDiv").getWebControls();
        $('#gridTable').cnTreeTable('search', param);
        if (callBackId) {
            id = callBackId;
        }
    }

    function searchGrid() {
        $('#gridTable').cnTable('search');
        resetToolbarStatus();
    }

    function deleteForm() {
        var selectedRow = $("#gridTable").bootstrapTable("getSelections");
        if (cn.checkRowDelete(selectedRow)) {
            cn.confirm("Confirm to delete the selected" + selectedRow.length + "Row data?", function () {
                var ids = cn.getIds(selectedRow);
                cn.ajax({
                    url: '@Url.Content("~/LogLogin/DeleteFormJson")' + '?ids=' + ids,
                    type: "post",
                    success: function (obj) {
                        if (obj.Tag == 1) {
                            cn.msgSuccess(obj.Message);
                            searchGrid();
                        }
                        else {
                            cn.msgError(obj.Message);
                        }
                    }
                });
            });
        }
    }


</script>