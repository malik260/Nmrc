@{
    Layout = "~/Views/Shared/_FormWhite.cshtml";
}

@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment HostingEnvironment
@section header {
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/fileinput/5.0.3/css/fileinput.min.css"))
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/fileinput/5.0.3/js/fileinput.min.js"))
}

<div class="singleContribution">
    <form id="form1" class="form-horizontal m">
        <div class="dialogblockborder dialogblockborderheadline">
            <div class="dialogblock-header" style="height: 100px;">
                <span class="dialogblockheader">Employee Contribution(Single & Bulk)</span>

                <div Class="form-group">


                    <div class="col-sm-6">
                        <div>
                            <p class="ism">  FOR MULTIPLE CONTRIBUTION CLICK </p>
                        </div>
                        <button class="btn btn-primary" type="button" id="bulk" style="margin-top: 10px;">
                            <span class="bold">BULK CONTRIBUTION</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>


        <div id="employeeContribution" style="margin-top: 10px; margin-bottom:5%">
            <div class="dialogblockborder dialogblockborderheadline">
                <div class="dialogblock-body" style="height: 100%;">
                    <span class="dialogblockheader">Single Contribution</span>

                    <div class="form-group">
                        <div class="col-sm-6">

                            <label for="employerName" class="form-label">Employer&nbsp;Name</label>
                            <input id="employerName" col="employerName" class="form-control" readonly />
                        </div>


                        <div class="col-sm-6">
                            <label for="employerNumber" class="form-label">Employer&nbsp;Number</label>
                            <input type="text" class="form-control" id="employerNumber" col="employerNumber" readonly>

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-6">
                            <label class="col-sm-0 control-label">Contribution&nbsp;Amount<font class="red"> *</font></label>
                            <input type="text" id="contributionAmount" col="contributionAmount" class="form-control" />
                        </div>

                        <div class="col-sm-6">
                            <label class="col-sm-0 control-label">Employee Name<font class="red"> *</font></label>
                            <div id="Employee" col="employeeNumber"></div>
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-sm-6">
                            <label class="col-sm-0 control-label">Month <font class="red"> *</font></label>
                            <div id="month" col="Month"></div>

                        </div>

                        <div class="col-sm-6">
                            <label class="col-sm-0 control-label">Year <font class="red"> *</font></label>

                            <select class="form-control" col="Year" name="year" id="year" data-val="true" required>
                                <option value="">Select Year--</option>
                            </select>



                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-6">
                            <label class="col-sm-0 control-label">Mobile Number <font class="red"> *</font></label>
                            <input id="phoneNumber" type="tel" max="11" col="phoneNumber" class="form-control" />
                        </div>
                        <div class="col-sm-6">
                            <label class="col-sm-0 control-label">Email&nbsp;Address <font class="red"> *</font></label>
                            <input id="emailAddress" type="email" col="Email" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-sm-6">
                            <label for="remark" class="form-label">Remark</label>
                            <input id="remark" col="remarks" class="form-control" readonly />

                        </div>
                    </div>


                    <div Class="form-group" style="display: flex; justify-content: left; align-items: center; margin-left: 2px">

                        <button class="btn btn-info" type="submit" id="btnSingle" onclick="saveForm()" style="margin-right: 10px;">
                            <i class="fa fa-save"></i>
                            Submit
                        </button>
                        <button class="btn btn-danger" type="button" id="btnclear" onclick="clearForm()">
                            <i class="fa fa-recycle"></i>
                            Clear
                        </button>
                    </div>
                </div>
            </div>
        </div>

    </form>




    <form id="multipleContributionUploadForm" enctype="multipart/form-data" class="form-horizontal m ">
        <div class="dialogblockborder dialogblockborderheadline">
            <div class="dialogblock-header" style="height: 50px;">
                <span class="dialogblockheader">Batch Upload</span>
                <div Class="form-group">
                    <div class="col-sm-6">
                        <button class="btn btn-primary" type="button" id="downloadContributionTemplate">
                            <i class="fa fa-file-excel-o"></i>
                            <span class="bold">Download Contribution Template </span>
                        </button>
                    </div>



                </div>
            </div>
        </div>
        <div id="employeeContributionMultiple" style="margin-top: 10px; margin-bottom:5%">
            <div class="dialogblockborder dialogblockborderheadline">
                <div class="dialogblock-body" style="height: 100%;">
                    <span class="dialogblockheader">Batch Contribution</span>
                    <div Class="form-group">
                        <div class="col-sm-6">
                            <label class="col-sm-0 control-label"> Account&nbsp;Name <font class="red"> *</font></label>
                            <input id="accountname" class="form-control" />
                        </div>

                        <div class="col-sm-6">
                            <label class="col-sm-0 control-label"> Phone&nbsp;Number <font class="red"> *</font></label>
                            <input id="phonenumber" max="11" type="tel" class="form-control" />


                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-6">
                            <label class="col-sm-0 control-label" for="Month">Month<font class="red"> *</font></label>

                            <select class="form-control" col="Month" name="month" id="montht" required>
                                <option value="">Select Month--</option>
                            </select>

                        </div>

                        <div class="col-sm-6">
                            <label class="col-sm-0 control-label">Year<font class="red"> *</font></label>

                            <select class="form-control"  col="Year" name="year" id="years" data-val="true" required>
                                <option value="">Select Year--</option>
                            </select>



                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-6">

                            <label class="col-sm-0 control-label">Email&nbsp;Address <font class="red"> *</font></label>
                            <input id="batchEmailaddress" required type="email" col="EmailAddress" class="form-control" />
                        </div>

                        <div class="col-sm-6">

                            <label class="col-sm-0 control-label"  >Narration</label>
                            <input id="naration" readonly class="form-control" />
                        </div>


                    </div>

                    <div Class="form-group">
                        <div class="col-sm-6">

                            <label class="col-sm-0 control-label">Choose File<font class="red">*</font></label>
                            <input id="contributionTemplate" type="file">

                        </div>
                        

                    </div>

                    <div Class="form-group" style="display: flex; justify-content: center; align-items: center">
                        <button class="btn btn-warning" type="submit" id="backBulkContribution" style="margin-right: 10px;">
                            <i class="fa fa-arrow-left"></i>
                            Back
                        </button>
                        <button class="btn btn-info" type="submit" id="btnBatchUpload" onclick="batchUpload()" style="margin-right: 10px;">
                            <i class="fa fa-save"></i>
                            Submit
                        </button>
                        <button class="btn btn-danger" type="reset">
                            <i class="fa fa-recycle"></i>
                            Clear
                        </button>
                    </div>
                   
                </div>
            </div>

        </div>

        

    </form>

    <div id="BatchErrorList" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="departmentLabel" aria-hidden="true" data-backdrop="false" data-keyboard="false">
        <div class="modal-dialog modal-lg">

            <div class="modal-content">
                <div class="modal-header" data-background-color="green" style="background-color: #184226;color:#FFF;">
                    <button type="button" class="close" data-dismiss="modal" id="btnafford" name="btnafford"><i class="fas fa-times"></i>X</button>
                    <h3 class="modal-title text-center"><strong class="text-white">Error List</strong></h3>
                </div>

                <div class="card-content">
                    <div class="modal-body">

                        <table id="bulkErrorTable" data-toggle="table" class="data-table"
                               data-search="true"
                               data-show-export="true"
                               data-export-types="['csv','txt','excel','pdf']"
                               data-export-options='{
                               "fileName"
                               "Statement of Account" ,
                               "worksheetName"
                               "Transaction List" ,
                               "jspdf"
                               {"orientation":"landscape",
                               "autotable"
                               {"theme" "grid" ,
                               "styles"
                               { "rowHeight"
                               20, "fontSize"
                               9},
                               "headerStyles"
                               { "fillColor"
                               [40, 10, 255], "textColor"
                               255 }
                               }  }
       }'
                               data-minimum-count-columns="2"
                               data-pagination="true"
                               data-page-list="[10, 25, 50, 100, ALL]"
                               data-search-align="right"
                               data-toolbar="#Batch-toolbar"
                               data-show-pagination-switch="false"
                               data-mobile-responsive="true"
                               data-show-refresh="true"
                               data-show-toggle="true"
                               data-show-columns="true"
                               data-detail-formatter="detailFormatter"
                               data-detail-view="false"
                               data-unique-id="Contributionid"
                               data-checkon-init="true"
                               data-buttons-class="success">
                            <thead>
                                <tr>
                                </tr>
                            </thead>
                        </table>



                    </div>
                </div>
            </div>
        </div>

    </div>


</div>




<script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/7.2.0/sweetalert2.all.min.js"></script>
<script type="text/javascript">

    var id = cn.request("id");



    $(document).ready(function () {

        $('#downloadBacklogTemplate').click(function () {
            // Define the URL of the download endpoint
            var downloadUrl = '@Url.Content("~/Contribution/BacklogDownload")'; // Replace with the actual controller and action name

            // Create a hidden iframe to initiate the file download
            var iframe = document.createElement('iframe');
            iframe.style.display = 'none';
            iframe.src = downloadUrl;
            document.body.appendChild(iframe);

            // Clean up the iframe after the download is initiated
            $(iframe).on('load', function () {
                document.body.removeChild(iframe);
            });
        });
    });



    $(document).ready(function () {

        $('#downloadContributionTemplate').click(function () {
            // Define the URL of the download endpoint
            var downloadUrl = '@Url.Content("~/Contribution/BatchDownload")'; // Replace with the actual controller and action name

            // Create a hidden iframe to initiate the file download
            var iframe = document.createElement('iframe');
            iframe.style.display = 'none';
            iframe.src = downloadUrl;
            document.body.appendChild(iframe);

            // Clean up the iframe after the download is initiated
            $(iframe).on('load', function () {
                document.body.removeChild(iframe);
            });
        });
    });










    $(document).ready(function () {
        // hide the form initially
        $('#form1').show();
        $('#multipleBacklogUploadForm').hide();
        $('#multipleContributionUploadForm').hide();




        // add click event listener to the button
        $('#bulk').click(function () {
            // unhide the form
            $('#form1').hide();
            $('#multipleBacklogUploadForm').hide();
            $('#multipleContributionUploadForm').show();
            // prevent the default behavior of the button
            event.preventDefault();
        });

        $('#backBulkContribution').click(function () {

            // unhide the form
            $('#form1').show();
            $('#multipleBacklogUploadForm').hide();
            $('#multipleContributionUploadForm').hide();


            // prevent the default behavior of the button
            event.preventDefault();
        });


        $("#paymentOption").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(PaymentOptionEnum).EnumToDictionaryString())) });
        $("#paymentOptionbatch").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(PaymentOptionEnum).EnumToDictionaryString())) });
        $("#month").cnComboBox({
            data: cn.getJson(@Html.Raw(typeof(ContributionMonthsEnum).EnumToDictionaryString()))
        });
        $("#months").cnComboBox({
            data: cn.getJson(@Html.Raw(typeof(ContributionMonthsEnum).EnumToDictionaryString()))
        });




    });

    $(document).ready(function ($) {
        var ddlYears = $("#year");
        debugger
        // Determine the Current Year.
        var currentYear = (new Date()).getFullYear();

        // Loop and add the Year values to DropDownList.
        for (var i = 1992; i <= currentYear; i++) {
            var option = $("<option />");
            option.html(i);
            option.val(i);
            ddlYears.append(option);
        }
    });

    $(document).ready(function ($) {
        var ddlYears = $("#years");
        debugger
        // Determine the Current Year.
        var currentYear = (new Date()).getFullYear();

        // Loop and add the Year values to DropDownList.
        for (var i = 1992; i <= currentYear; i++) {
            var option = $("<option />");
            option.html(i);
            option.val(i);
            ddlYears.append(option);
        }
    });

    $("#contributionTemplate").fileinput({

        language: 'en',
        showPreview: false,
        allowedFileExtensions: ['xlsx', 'xls']
    }).on("fileuploaded", function (event, data) {
        var obj = data.response;

        if (obj && obj.Tag === @GlobalConstant.ONE) {
            // The uploaded file is valid; you can use filePath as needed
            var filePath = obj.Data;
            // Here, you can proceed with processing the uploaded file
            // Compare the uploaded file with the template, and perform any necessary actions
            validateAndProcessUploadedFile(filePath);
        } else {
            // The uploaded file is not valid; you can handle this case as needed
            var filePath = '';
            alert('Invalid uploaded file. Please upload the correct template.');
        }
    });







    function saveForm() {


        $('#form1').validate({

            submitHandler: function (form) {
                debugger
                $("input[type=submit]").attr("disabled", "disabled");

                swal({
                    title: "Are you sure?",
                    text: "Contribution will be made!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#ff9800",
                    confirmButtonText: "Yes, continue",
                    cancelButtonText: "No, stop!",
                    showLoaderOnConfirm: true,
                    preConfirm: function () {
                        return new Promise(function (resolve) {
                            setTimeout(function () {
                                resolve();
                            }, 4000);
                        });
                    }
                }).then(function (isConfirm) {
                    if (isConfirm.value) {
                        swal({
                            title: 'Contributing...',
                            html: 'Please wait...',
                            showConfirmButton: false,
                            allowEscapeKey: false,
                            allowOutsideClick: false,
                            didOpen: () => {
                                swal.showLoading();
                            }
                        });


                        var signatureimgData = new FormData();
                        var selectedMonth = $("#month").find(":selected").text();
                        console.log(selectedMonth);

                        signatureimgData.append("employeeNumber", $('#Employee').cnComboBox('getValue'));
                        // signatureimgData.append("EmployeeName", $('#employeeName').val());
                        signatureimgData.append("contributionAmount", $('#contributionAmount').val());
                        signatureimgData.append("employerNumber", $('#employerNumber').val());
                        signatureimgData.append("phoneNumber", $('#phoneNumber').val());
                        signatureimgData.append("Email", $('#emailAddress').val());
                        signatureimgData.append("Month", selectedMonth);
                        signatureimgData.append("Year", $('#year').val());
                        signatureimgData.append("remarks", $('#remark').val());
                        // signatureimgData.append("PaymentOption", $('#paymentOption').val());
                        debugger

                        console.log(signatureimgData);

                        $.ajax({
                            url: '@Url.Content("~/Contribution/EmployerSingleContribution")',
                            type: "POST",
                            data: signatureimgData,
                            contentType: false,
                            processData: false,
                            success: function (obj) {
                                if (obj.Tag == 1) {
                                    swal({ title: 'Add Contribution', text: 'Contribution was successful', type: 'success' })
                                        .then(function () {
                                            // $('#form1').hide();
                                            /* $('#frmbatch')[0].reset();*/
                                            clear();

                                        });

                                }
                                else {


                                    swal({ title: 'Add Contribution', text: 'Contribution Completed With Error', type: 'error' })
                                        .then(function () {

                                            debugger
                                            $('.BatchErrorList').show();
                                            var $table = $('#bulkErrorTable');
                                            $table.bootstrapTable("destroy");

                                            $table.bootstrapTable({
                                                data: obj.message,

                                                columns: [
                                                    {
                                                        field: 'error',
                                                        title: 'Error(s)'

                                                    }

                                                ]
                                            });


                                        });

                                }
                            },
                            error: function (e) {

                                swal({ title: 'Contribution', text: 'Contribution Encountered an Error', type: 'error' }).then(function () { });
                                /$("#btnUpdateChangeEmployer").removeAttr("disabled");/
                            }
                        });
                    }
                }
                );
            }

        });
    }

    window.paymentEvents = {


        'click .paym': function (e, value, row, index) {

            var orderId = row['transactionid'];
            var rrr = row['rrr'];

            debugger

            makePayment(orderId, rrr)

        }

    };

    function paymentFormatter(value, row, index) {


        return [
            '<button class="btn btn-danger paym">' + 'Pay' + '</button>'
        ].join('');


    }



    function makePayment(orderId, RRR) {
        debugger
        $('#initialpayment').modal('hide');
        let rrr = RRR;
        let transactionId = orderId;
        var paymentEngine = RmPaymentEngine.init({
            key: "U09MRHw0MDgxOTUzOHw2ZDU4NGRhMmJhNzVlOTRiYmYyZjBlMmM1YzUyNzYwZTM0YzRjNGI4ZTgyNzJjY2NjYTBkMDM0ZDUyYjZhZWI2ODJlZTZjMjU0MDNiODBlMzI4YWNmZGY2OWQ2YjhiYzM2N2RhMmI1YWEwYTlmMTFiYWI2OWQxNTc5N2YyZDk4NA==",
            processRrr: true,
            transactionId: transactionId,
            extendedData: {
                customFields: [
                    {
                        name: "rrr",
                        value: rrr

                    }
                ]
            },
            onSuccess: function (response) {
                console.log('callback Successful Response', response);

                //            onError: function (response) {
                //console.log('callback Error Response', response);

            },
            onClose: function () {
                console.log("closed");

            }
        });
        paymentEngine.showPaymentWidget();
    }

    $('#contributionAmount').on('input', function () {
        var inputValue = $(this).val();
        var numericValue = inputValue.replace(/[^0-9]/g, '');
        $(this).val(numericValue);
    });





    $(document).ready(function () {
        $.ajax({
            url: '@Url.Content("~/Contribution/GetEmployerDetails")',
            type: 'GET',
            dataType: 'json',
            success: function (obj) {
                if (obj.Tag == 1) {
                    var data = obj.Data;
                    $('#employerNumber').val(data.EmployerNo);
                    $('#employerName').val(data.EmployerName);
                    $('#remark').val("Contribution By" + " " + data.EmployerName + " " + "for it employee");
                    $('#naration').val("Contribution By" + " " + data.EmployerName + " " + "for it employees");
                    $("#Employee").cnComboBox({
                        url: '@Url.Content("~/Contribution/GetEmployeeList")' + '?company=' + data.EmployerNo,
                        key: "Id",
                        value: "FullName"
                    });


                } else {
                    cn.msgError(obj.Message);

                    cn.closeDialog();
                    setTimeout(function () {
                        cn.closeDialog();
                    }, 3000); // 5000 milliseconds = 5 seconds
                }

            },
            error: function () {
                // Handle error, if any
            }
        });

    });


    var months = [
        { value: '01', text: 'January' },
        { value: '02', text: 'February' },
        { value: '03', text: 'March' },
        { value: '04', text: 'April' },
        { value: '05', text: 'May' },
        { value: '06', text: 'June' },
        { value: '07', text: 'July' },
        { value: '08', text: 'August' },
        { value: '09', text: 'September' },
        { value: '10', text: 'October' },
        { value: '11', text: 'November' },
        { value: '12', text: 'December' }
    ];
    $(document).ready(function () {
        var $monthSelect = $('#montht'); // Select the <select> element

        // Clear existing options (if any)
        $monthSelect.empty();

        // Add default option
        $monthSelect.append('<option value="">Select Month--</option>');

        // Add months dynamically
        $.each(months, function (index, month) {
            $monthSelect.append(
                $('<option></option>').val(month.value).text(month.text)
            );
        });
    });
    function batchUpload() {


        var selectedFile = $("#contributionTemplate").val();



        if (!selectedFile || selectedFile === "") {
            swal({
                title: "File Not Selected",
                text: "Please choose a file before proceeding.",
                type: "warning",
                confirmButtonText: "OK"
            });
            return; // Prevent the form from submitting
        }

        $('#multipleContributionUploadForm').validate({
            rules: {



                paymentOptionBatch: {
                    required: true
                },
                contributionTemplate: {
                    required: true,
                    extension: "xls|xlsx"
                },
                accountName: {
                    required: true
                },
                phoneNumber: {
                    required: true
                },
                emailAddress: {
                    required: true
                },
                montht: {
                    required: true
                },
            },
            messages: {
                accountname: { required: "Account Number is Required" },
                paymentOptionbatch: { required: "payment Option is required" },
                contributionTemplate: { required: "Excel Sheet is required", extension: "Only Excel files (.xls, .xlsx) are allowed" },
                phonenumber: { required: "Phone Number Sheet is required" },
                emailaddress: { required: "Email is required" },
                montht: { required: "month is required" },
            },

            submitHandler: function (form) {

                debugger
                $("input[type=submit]").attr("disabled", "disabled");
                swal({
                    title: "Are you sure?",
                    text: "Batch Upload will be made!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#ff9800",
                    confirmButtonText: "Yes, continue",
                    cancelButtonText: "No, stop!",
                    showLoaderOnConfirm: true,
                    preConfirm: function () {
                        return new Promise(function (resolve) {
                            setTimeout(function () {
                                resolve();
                            }, 4000);
                        });
                    }
                }).then(
                    function (isConfirm) {
                        if (isConfirm.value) {

                            swal({
                                title: 'Uploading Multiple Contributions...',
                                html: 'Please wait...',
                                showConfirmButton: false,

                                allowEscapeKey: false,
                                allowOutsideClick: false,
                                didOpen: () => {
                                    swal.showLoading()
                                }
                            });
                            debugger
                            var file = $("#contributionTemplate").get(0).files[0];
                            var signatureimgData = new FormData();
                            var selectedMonth = $("#montht").find(":selected").text();


                            signatureimgData.append("ContributionTemplate", $("#contributionTemplate").get(0).files[0]);
                            signatureimgData.append("accountName", $('#accountname').val());

                            signatureimgData.append("paymentOptionBatch", $('#paymentOptionbatch').val());

                            signatureimgData.append("phoneNumber", $('#phonenumber').val());
                            signatureimgData.append("BatchEmailAddress", $('#batchEmailaddress').val());
                            signatureimgData.append("narration", $('#naration').val());
                            signatureimgData.append("Month", selectedMonth);
                            signatureimgData.append("Year", $('#years').val());

                            console.log(signatureimgData);

                            $.ajax({
                                url: '@Url.Content("~/Contribution/BatchContribution")',
                                type: "POST",
                                data: signatureimgData,
                                contentType: false,
                                processData: false,
                                success: function (obj) {

                                    if (obj.success == true) {
                                        swal({ title: 'Add BatchUpload', text: 'Batch Upload was successful', type: 'success' })
                                            .then(function () {

                                                clear();

                                            });
                                    }
                                    else {


                                        swal({ title: 'Add BatchUpload', text: 'Batch Upload Completed With Error', type: 'error' })
                                            .then(function () {

                                                debugger
                                                $('#BatchErrorList').modal('show');

                                                var $table = $('#bulkErrorTable');
                                                $table.bootstrapTable("destroy");

                                                $table.bootstrapTable({
                                                    data: obj.message,

                                                    columns: [
                                                        {
                                                            field: 'Error',
                                                            title: 'Error(s)'

                                                        }

                                                    ]
                                                });


                                            });

                                    }
                                },
                                error: function (e) {

                                    swal({ title: 'Batch Upload', text: 'Batch Upload Encountered an Error', type: 'error' }).then(function () { clear(); });
                                    /$("#btnUpdateChangeEmployer").removeAttr("disabled");/
                                }
                            });
                        }
                        else {
                            swal('Cancelled', 'Your operation process has been cancelled', 'error');
                        }
                    }
                );
            }

        });
    }

    //function clear() {
    //    $("#accountname").val('');
    //    $("#phonenumber").val('');
    //    $("#naration").val('');
    //    $("#batchEmailaddress").val('');
    //    $("#contributionTemplate").val('');
    //}


    $('#phonenumber').keyup(function (e) {
        if (/[^0-9\d ]/i.test(this.value)) {
            // Filter non-digits from input value.
            // this.value = this.value.replace(/\D/g, '');

            //Filter special character
            this.value = this.value.replace(/[^0-9\d ]/i, '');


        }
    })



    function clear() {
        $("#contributionAmount").val('');
        $("#year").val('');
        $("#phoneNumber").val('');
        $("#emailAddress").val('');
        $("#month").prop('selectedIndex', 0); // Reset ComboBox after successful contribution

    }

    $(document).ready(function () {
        // Select the input element by its ID and add the required attribute
        $('#phoneNumber').prop('required', true);
        $('#emailAddress').prop('required', true);
        $('#contributionAmount').prop('required', true);
        $('#accountname').prop('required', true);
        $('#phonenumber').prop('required', true);
        $('#batchEmailaddress').prop('required', true);
        $('#naration').prop('required', true);
    });

    $('#phoneNumber').keyup(function (e) {
        if (/[^0-9\d ]/i.test(this.value)) {
            this.value = this.value.replace(/[^0-9\d ]/i, '');
        }
    })

    $('#backlogPhoneNumber').keyup(function (e) {
        if (/[^0-9\d ]/i.test(this.value)) {
            this.value = this.value.replace(/[^0-9\d ]/i, '');
        }
    })

    $(document).ready(function () {
        $('#backlogPhoneNumber').on('input', function () {
            var maxLength = 11;
            if ($(this).val().length > maxLength) {
                $(this).val($(this).val().slice(0, maxLength));
            }
        });
    });

    $(document).ready(function () {
        $('#phonenumber').on('input', function () {
            var maxLength = 11;
            if ($(this).val().length > maxLength) {
                $(this).val($(this).val().slice(0, maxLength));
            }
        });
    });


    $('#phonenumber').keyup(function (e) {
        if (/[^0-9\d ]/i.test(this.value)) {
            this.value = this.value.replace(/[^0-9\d ]/i, '');
        }
    })

    $(document).ready(function () {
        $('#phoneNumber').on('input', function () {
            var maxLength = 11;
            if ($(this).val().length > maxLength) {
                $(this).val($(this).val().slice(0, maxLength));
            }
        });
    });

    function clearForm() {
        $("#contributionAmount").val('');
        $("#year").val('');
        $("#accountName").val('');
        $("#phoneNumber").val('');
        $("#emailAddress").val('');
        $("#month").val('');
    }

</script>