@{
    Layout = "~/Views/Shared/_Index.cshtml";
}

<div class="ibox-title">
    <h5>PROPERTY REGISTRATION</h5>
</div>
<div class="container-div">
    <div class="row">

        <div class="btn-group-sm" id="toolbar">
            <a id="btnAdd" class="btn btn-success" onclick="showSaveForm()"><i class="fa fa-plus"></i> Register</a>
            <a id="btnEdit" class="btn btn-primary disabled" onclick="showEditForm()"><i class="fa fa-edit"></i> Edit</a>
            <a id="btnDelete" class="btn btn-danger disabled" onclick="deleteForm()"><i class="fa fa-remove"></i> Delete</a>
        </div>

        <div class="col-sm-12 select-table table-striped">
            <table id="gridTable" data-mobile-responsive="true"></table>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script type="text/javascript">
    $(function () {
        initGrid();

        $("#status").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(StatusEnum).EnumToDictionaryString())) });

        laydate.render({ elem: '#startTime', format: 'yyyy-MM-dd', theme: 'molv' });
        laydate.render({ elem: '#endTime', format: 'yyyy-MM-dd', theme: 'molv' });
    });

    function initGrid() {
        var queryUrl = '@Url.Content("~/PropertyRegistration/GetPropertyRegistrationPageListJson")';
        $('#gridTable').cnTable({
            url: queryUrl,
            columns: [
                { checkbox: true, visible: true },
                { field: 'Id', title: 'Id', visible: false },
                { field: 'PhoneNumber', title: 'Phone Number', sortable: false },
                { field: 'Email', title: 'Email Address', sortable: false },
                { field: 'PropertyType', title: 'Property Type', sortable: false },
                { field: 'PropertyLocation', title: 'Property Location', sortable: false },
                { field: 'Latitude', title: 'Latitude', sortable: false },
                { field: 'Longitude', title: 'Longitude', sortable: false },
                {
                    title: 'Operate',
                    align: 'center',
                    formatter: function (value, row, index) {
                        var actions = [];
                        actions.push('<a class="btn btn-warning btn-xs" href="#" onclick="showPropertyForm(\'' + row.Id + '\')"><i class="fa fa-eye"></i>View Property</a>');
                        return actions.join('');
                    }
                },

            ],
            queryParams: function (params) {
                var pagination = $('#gridTable').cnTable('getPagination', params);
                var queryString = $("#searchDiv").getWebControls(pagination);
                return queryString;
            }
        });
    }

    function searchGrid() {
        $('#gridTable').cnTable('search');
        resetToolbarStatus();
    }

    function showSaveForm() {
        var id = 0;
        var confirmButtonText = "Add";
        cn.openDialog({
            title: "Property Registration",
            content: '@Url.Content("~/PropertyRegistration/PropertyRegistrationForm")' + '?id=' + id,
            width: "780px",
            btn: [confirmButtonText, 'Cancel'],

            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
                iframeWin.saveForm(index);
            }
        });
    }

    function showEditForm() {
        var selectedRow = $("#gridTable").bootstrapTable("getSelections");
        if (!cn.checkRowEdit(selectedRow)) {
            return;
        }
        var id = selectedRow[0].Id;

        cn.openDialog({
            title: "Edit Property Registration Form",
            content: '@Url.Content("~/PropertyRegistration/PropertyRegistrationEditForm")' + '?id=' + id,
            width: "780px",
            btn: ['Update', 'Cancel'],
            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
                iframeWin.saveForm(index);
            }
        });
    }
    // function deleteForm() {
    //     var selectedRow = $("#gridTable").bootstrapTable("getSelections");
    //     if (cn.checkRowDelete(selectedRow)) {
    //         cn.confirm("Confirm to delete the selected"  + " row data?", function () {
    //             var ids = cn.getIds(selectedRow);
    //             cn.ajax({
    //                 url: '@Url.Content("~/PropertyRegistration/DeleteFormJson")' + '?ids=' + ids,
    //                 type: "post",
    //                 success: function (obj) {
    //                     if (obj.Tag == 1) {
    //                         cn.msgSuccess(obj.Message);
    //                         searchGrid();
    //                     }
    //                     else {
    //                         cn.msgError(obj.Message);
    //                     }
    //                 }
    //             });
    //         });
    //     }
    // }

    function deleteForm() {
        var selectedRow = $("#gridTable").bootstrapTable("getSelections");
        if (cn.checkRowDelete(selectedRow)) {
            Swal.fire({
                title: 'Are you sure?',
                text: "Confirm to delete the selected row data?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var ids = cn.getIds(selectedRow);
                    $.ajax({
                        url: '@Url.Content("~/PropertyRegistration/DeleteFormJson")' + '?ids=' + ids,
                        type: "post",
                        success: function (obj) {
                            if (obj.Tag == 1) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Deleted!',
                                    text: obj.Message
                                }).then(() => {
                                    searchGrid();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: obj.Message
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'An error occurred while deleting the data.'
                            });
                        }
                    });
                }
            });
        }
    }


    function openCustomDialog(options) {
        layer.open({
            type: 2,
            title: options.title,
            content: options.content,
            area: [options.width, '90%'],
            btn: ['Close'], // Include a close button
            yes: function (index, layero) {
                // This function will be called when the close button is clicked
                layer.close(index);
            },
            success: function (layero, index) {
                options.callback(index, layero);
            }
        });
    }

    function showPropertyForm(id) {
        openCustomDialog({
            title: "Property Gallery",
            content: '@Url.Content("~/PropertyRegistration/PropertyImages")' + '?id=' + id,
            width: "780px",
            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
                iframeWin.saveForm(index);
            }
        });
    }
</script>