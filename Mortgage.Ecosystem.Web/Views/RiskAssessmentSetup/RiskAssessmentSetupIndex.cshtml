@{
    Layout = "~/Views/Shared/_Index.cshtml";
}



<div class="wrapper wrapper-content animated fadeIn">
    <div class="row">
        <div class="col-sm-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>RISK ASSESSMENT SETUP </h5>
                </div>
                <div class="ibox-content">
                    <div class="tabs-container">
                        <ul class="nav nav-tabs">
                            <li class="active">
                                <a data-toggle="tab" href="#assessmentFactors" aria-expanded="true"> ASSESSMENT FACTORS</a>
                            </li>
                            <li class="">
                                <a data-toggle="tab" href="#indexHeader" aria-expanded="false">INDEX HEADER</a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div id="assessmentFactors" class="tab-pane active">
                                <div class="panel-body">
                                    <div class="container-div">
                                        <div class="row">
                                            <div id="searchAssessmentFactorsDiv" class="col-sm-12 search-collapse">
                                                <div class="select-list">
                                                    <ul>
                                                        <li>
                                                            Name: <input id="name" col="Name" type="text" />
                                                        </li>
                                                        <li>
                                                            Status: <span id="assessmentFactorsStatus" col="Status"></span>
                                                        </li>
                                                        <li class="select-time">
                                                            <label>Created: </label>
                                                            <input id="assessmentFactorsStartTime" col="StartTime" type="text" class="time-input" placeholder="start time" />
                                                            <span>-</span>
                                                            <input id="assessmentFactorsEndTime" col="EndTime" type="text" class="time-input" placeholder="end time" />
                                                        </li>
                                                        <li>
                                                            <a id="btnAssessmentFactorsSearch" class="btn btn-primary btn-sm" onclick="searchAssessmentFactorsGrid()"><i class="fa fa-search"></i>&nbsp;Search</a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <br />
                                            <div class="btn-group-sm" id="assessmentFactors">
                                                <a id="btnAdd" class="btn btn-success" onclick="showAssessmentFactorsSaveForm(true)"><i class="fa fa-plus"></i> Add</a>
                                                <a id="btnEdit" class="btn btn-primary disabled" onclick="showSaveForm(false)"><i class="fa fa-edit"></i> Edit</a>
                                                <a id="btnDelete" class="btn btn-danger disabled" onclick="deleteForm()"><i class="fa fa-remove"></i> Delete</a>
                                            </div>
                                            <div class="col-sm-12">
                                                <table id="gridAssessmentFactorsTable" data-mobile-responsive="true"></table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="indexHeader" class="tab-pane">
                                <div class="panel-body">
                                    <div class="container-div">
                                        <div class="row">
                                            <div id="searchIndexHeaderDiv" class="col-sm-12 search-collapse">
                                                <div class="select-list">
                                                    <ul>
                                                        <li>
                                                            Name: <input id="name" col="Name" type="text" />
                                                        </li>
                                                        <li>
                                                            Status: <span id="indexHeaderStatus" col="Status"></span>
                                                        </li>
                                                        <li class="select-time">
                                                            <label>Created: </label>
                                                            <input id="indexHeaderStartTime" col="StartTime" type="text" class="time-input" placeholder="start time" />
                                                            <span>-</span>
                                                            <input id="indexHeaderEndTime" col="EndTime" type="text" class="time-input" placeholder="end time" />
                                                        </li>
                                                        <li>
                                                            <a id="btnIndexHeaderSearch" class="btn btn-primary btn-sm" onclick="searchIndexHeaderGrid()"><i class="fa fa-search"></i>&nbsp;Search</a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                                <div class="btn-group-sm" id="indexHeader">
                                                    <a id="btnAdd" class="btn btn-success" onclick="showIndexHeaderSaveForm(true)"><i class="fa fa-plus"></i> Add</a>
                                                    <a id="btnEdit" class="btn btn-primary disabled" onclick="showSaveForm(false)"><i class="fa fa-edit"></i> Edit</a>
                                                    <a id="btnDelete" class="btn btn-danger disabled" onclick="deleteForm()"><i class="fa fa-remove"></i> Delete</a>
                                                </div>
                                           @* <div class="col-sm-12 select-table table-striped">*@
                                              <div class="col-sm-12">
                                                <table id="gridIndexHeaderTable" data-mobile-responsive="true"></table>
                                            </div>
                                        </div>
                                    </div>
                                    <script type="text/javascript">
                                        $(function () {
                                            initGrid();

                                            $("#assessmentFactorsStatus").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(StatusEnum).EnumToDictionaryString())) });
                                            $("#indexHeaderStatus").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(StatusEnum).EnumToDictionaryString())) });

                                            laydate.render({ elem: '#assessmentFactorsStartTime', format: 'yyyy-MM-dd', theme: 'molv' });
                                            laydate.render({ elem: '#assessmentFactorsEndTime', format: 'yyyy-MM-dd', theme: 'molv' });

                                            laydate.render({ elem: '#indexHeaderStartTime', format: 'yyyy-MM-dd', theme: 'molv' });
                                            laydate.render({ elem: '#indexHeaderEndTime', format: 'yyyy-MM-dd', theme: 'molv' });
                                        });

                                        function initGrid() {
                                            var queryAssessmentFactorsUrl = '@Url.Content("~/RiskAssessmentSetup/GetAssessmentFactorsPageListJson")';
                                            var queryIndexHeaderUrl = '@Url.Content("~/RiskAssessmentSetup/GetIndexHeaderPageListJson")';

                                            $('#gridAssessmentFactorsTable').cnTable({
                                                url: queryAssessmentFactorsUrl,
                                                columns: [
                                                    { checkbox: true, visible: true },
                                                    { field: 'Id', title: 'ID', visible: false },
                                                    { field: 'AssessmentFactors', title: 'Assessment Factors', sortable: true },
                                                    { field: 'Index', title: 'Index', sortable: true },
                                                    //{ field: 'Amount', title: 'Amount', sortable: true },
                                                    //{ field: 'RRR', title: 'RRR', sortable: true },
                                                    //{ field: 'TransactionId', title: 'Transaction ID', sortable: true },
                                                    //{ field: 'Status', title: 'Type', visible: true, sortable: true }
                                                ],
                                                queryParams: function (params) {
                                                    var pagination = $('#gridAssessmentFactorsTable').cnTable('getPagination', params);
                                                    var queryString = $("#searchAssessmentFactorsDiv").getWebControls(pagination);
                                                    return queryString;
                                                }
                                            });

                                            $('#gridIndexHeaderTable').cnTable({
                                                url: queryIndexHeaderUrl,
                                                columns: [
                                                    { checkbox: true, visible: true },
                                                    { field: 'Id', title: 'ID', visible: false },
                                                    { field: 'IndexHead', title: 'Index Head', sortable: true },
                                                    { field: 'IndexItem', title: 'Index Item', sortable: true },
                                                    { field: 'Weight', title: 'Weight', sortable: true },
                                                    //{ field: 'RRR', title: 'RRR', sortable: true },
                                                    //{ field: 'TransactionId', title: 'Transaction ID', sortable: true },
                                                    //{ field: 'Status', title: 'Type', visible: true, sortable: true }
                                                ],
                                                queryParams: function (params) {
                                                    var pagination = $('#gridIndexHeaderTable').cnTable('getPagination', params);
                                                    var queryString = $("#searchIndexHeaderDiv").getWebControls(pagination);
                                                    return queryString;
                                                }
                                            });
                                        }

                                        function searchAssessmentFactorsGrid() {
                                            $('#gridAssessmentFactorsTable').cnTable('search');
                                            resetToolbarStatus();
                                        }



                                         function showAssessmentFactorsSaveForm(bAdd) {
                                            var id = 0;
                                            if (!bAdd) {
                                                var selectedRow = $("#gridAssessmentFactorsTable").bootstrapTable("getSelections");
                                                if (!cn.checkRowEdit(selectedRow)) {
                                                    return;
                                                }
                                                else {
                                                    id = selectedRow[0].Id;
                                                }
                                            }
                                            cn.openDialog({
                                                title: id > 0 ? "Edit Agent" : "Assessment Factor",
                                                content: '@Url.Content("~/RiskAssessmentSetup/AssessmentFactorsForm")' + '?id=' + id,
                                                width: "780px",
                                                callback: function (index, layero) {
                                                    var iframeWin = window[layero.find('iframe')[0]['name']];
                                                    iframeWin.saveForm(index);
                                                }
                                            });
                                        }

                                        function deleteForm() {
                                            var selectedRow = $("#gridAssessmentFactorsTable").bootstrapTable("getSelections");
                                            if (cn.checkRowDelete(selectedRow)) {
                                                cn.confirm("Confirm to delete the selected" + selectedRow.length + "Row data?", function () {
                                                    var ids = cn.getIds(selectedRow);
                                                    cn.ajax({
                                                        url: '@Url.Content("~/RiskAssessmentSetup/DeleteFormJson")' + '?ids=' + ids,
                                                        type: "post",
                                                        success: function (obj) {
                                                            if (obj.Tag == 1) {
                                                                cn.msgSuccess(obj.Message);
                                                                searchAssessmentFactorsGrid();
                                                            }
                                                            else {
                                                                cn.msgError(obj.Message);
                                                            }
                                                        }
                                                    });
                                                });
                                            }
                                        }


                                        function searchIndexHeaderGrid() {
                                            $('#gridIndexHeaderTable').cnTable('search');
                                            resetToolbarStatus();
                                        }

                                         function showIndexHeaderSaveForm(bAdd) {
                                            var id = 0;
                                            if (!bAdd) {
                                                var selectedRow = $("#gridIndexHeaderTable").bootstrapTable("getSelections");
                                                if (!cn.checkRowEdit(selectedRow)) {
                                                    return;
                                                }
                                                else {
                                                    id = selectedRow[0].Id;
                                                }
                                            }
                                            cn.openDialog({
                                                title: id > 0 ? "Edit Agent" : "Index Header",
                                                content: '@Url.Content("~/RiskAssessmentSetup/IndexHeaderForm")' + '?id=' + id,
                                                width: "780px",
                                                callback: function (index, layero) {
                                                    var iframeWin = window[layero.find('iframe')[0]['name']];
                                                    iframeWin.saveForm(index);
                                                }
                                            });
                                        }

                                        function deleteForm() {
                                            var selectedRow = $("#gridIndexHeaderTable").bootstrapTable("getSelections");
                                            if (cn.checkRowDelete(selectedRow)) {
                                                cn.confirm("Confirm to delete the selected" + selectedRow.length + "Row data?", function () {
                                                    var ids = cn.getIds(selectedRow);
                                                    cn.ajax({
                                                        url: '@Url.Content("~/RiskAssessmentSetup/DeleteFormJson")' + '?ids=' + ids,
                                                        type: "post",
                                                        success: function (obj) {
                                                            if (obj.Tag == 1) {
                                                                cn.msgSuccess(obj.Message);
                                                                searchIndexHeaderGrid();
                                                            }
                                                            else {
                                                                cn.msgError(obj.Message);
                                                            }
                                                        }
                                                    });
                                                });
                                            }
                                        }
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


                                       