@{
    Layout = "~/Views/Shared/_FormWhite.cshtml";
}




<div class="wrapper animated fadeInRight">
    <form id="form" class="form-horizontal m">
        <div class="dialogblockborder dialogblockborderheadline">
            <div class="dialogblock-header" style="height: auto;">
                <span class="dialogblockheader">Update Record</span>
                @*  <div class="form-group" style="margin-top: 10px;">
                <div class="col-sm-6">
                <label class="control-label">Employer<font class="red"> *</font></label>
                <div id="company" col="Company"></div>
                </div>
                </div>*@
                <div class="form-group" style="margin-top: 10px;">
                    <div class="col-sm-6">
                        <label class="control-label">Employer</label>
                        <strong> <input id="company" col="Company" type="text" class="form-control" readonly /></strong>
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">NHF Number</label>
                        <strong> <input id="nhfNumber" col="NHFNumber" type="text" class="form-control" readonly /></strong>
                    </div>
                </div>
                <div class="form-group" style="margin-top: 10px;">
                    <div class="col-sm-6">
                        <label class="control-label">Email<font class="red"> *</font></label>
                        <input id="emailAddress" col="EmailAddress" type="email" class="form-control" required />
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">Mobile/Telephone<font class="red"> *</font></label>
                        <input id="mobileNumber" col="MobileNumber" type="text" class="form-control" required />
                    </div>
                </div>
            </div>
        </div>
        <div class="dialogblockborder dialogblockborderheadline">
            <div class="dialogblock-body" style="height: auto;">
                <span class="dialogblockheader"></span>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label class="control-label">BVN</label>
                        <input id="bvn" col="BVN" type="text" class="form-control" readonly />
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">NIN</label>
                        <input id="nin" col="NIN" type="text" class="form-control" readonly />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label class="control-label">Title</label>
                        <div id="title" col="Title"></div>
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">First Name<font class="red"> *</font></label>
                        <input id="firstName" col="FirstName" type="text" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label class="control-label">Other Name(s)</label>
                        <input id="otherName" col="OtherName" type="text" class="form-control" />
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">Last Name<font class="red"> *</font></label>
                        <input id="lastName" col="LastName" type="text" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label class="col-sm-2 control-label" style="padding-left: 0px;">Gender</label>
                        <div id="gender" col="Gender" required></div>
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">Date of Birth</label>
                        <div class="input-group date">
                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                            <input id="dateOfBirth" col="DateOfBirth" type="text" class="form-control" placeholder="yyyy-MM-dd" readonly />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label class="control-label">Postal Address</label>
                        <textarea id="postalAddress" col="PostalAddress" class="form-control" style="height:60px"></textarea>
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">Marital Status<font class="red"> *</font></label>
                        <div id="marital" col="MaritalStatus" required></div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label class="control-label">Kin's Last Name<font class="red"> *</font></label>
                        <input id="kinLastName" col="KinLastName" type="text" class="form-control" />
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">Kin's FIrst Name<font class="red"> *</font></label>
                        <input id="kinFirstName" col="KinFirstName" type="text" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label class="control-label">Kin's Mobile/Telephone<font class="red"> *</font></label>
                        <input id="kinMobileNumber" col="KinMobileNumber" type="text" class="form-control" />
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">Kin's Relationship<font class="red"> *</font></label>
                        <div id="kinRelationship" col="KinRelationship"></div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label class="control-label">Kin's Address<font class="red"> *</font></label>
                        <input id="kinAddress" col="KinAddress" class="form-control" required />
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">Kin's Email Address</label>
                        <input id="kinEmailAddress" col="KinEmailAddress" type="email" class="form-control" />
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-sm-6">
                        <label class="control-label">Contribution Branch<font class="red"> *</font></label>
                        <div id="branch" col="ContributionBranch"></div>
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">Date of Employment</label>
                        <div class="input-group date">
                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                            <input type="text" class="form-control" id="employmentDate" col="EmploymentDate" placeholder="yyyy-MM-dd" readonly>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-sm-6">
                        <label class="control-label">Account Type<font class="red"> *</font></label>
                        <div id="accountType" col="AccountType"></div>
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">Bank Name<font class="red"> *</font></label>
                        <div id="bankName" col="CustomerBank"></div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label class="control-label">Account Number<font class="red"> *</font></label>
                        <input id="accountNumber" col="BankAccountNumber" type="text" class="form-control" required />
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">Monthly Salary (Net Pay)</label>
                        <input id="monthlySalary" col="MonthlyIncome" type="text" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6">
                        <label class="control-label">Alert Type<font class="red"> *</font></label>
                        <div id="alertType" col="AlertType"></div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<style>
    #gender {
        pointer-events: none;
    }
</style>

<!-- SweetAlert2 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

<script type="text/javascript">
    var id = cn.request("id");

    $(document).ready(function () {
        $.ajax({
            url: '@Url.Content("~/CustomerProfileUpdate/ViewCustomerInformation")', // The URL of your controller method
            type: 'GET',
            dataType: 'json',
            success: function (obj) {
                if (obj.Tag == 1) {
                    var data = obj.Data;
                    $('#company').val(data.EmployerName);
                    $('#companyNumber').val(data.EmployerNo);
                    $('#nhfNumber').val(data.Nhfno);
                    $('#firstName').val(data.FirstName);
                    $('#otherName').val(data.OtherName);
                    $('#lastName').val(data.LastName);
                    $('#emailAddress').val(data.EmailAddress);
                    $('#mobileNumber').val(data.MobileNo);
                    $('#postalAddress').val(data.ContactAddress);
                    $('#accountNumber').val(data.AccountNum);
                    $('#monthlySalary').val(data.MonthlyIncome);
                    $('#kinLastName').val(data.NOKLastName);
                    $('#kinFirstName').val(data.NOKFirstName);
                    $('#kinMobileNumber').val(data.NOKPhoneNo);
                    $('#kinAddress').val(data.NOKAddress);
                    $('#kinEmailAddress').val(data.NOKEmailAddress);
                    $('#employmentDate').val(data.EmploymentDate);
                    $('#bvn').val(data.Bvn);
                    $('#nin').val(data.Nin);
                    $('#dateOfBirth').val(data.Dob);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: obj.Message
                    });
                    $('#form').hide();
                    setTimeout(function () {
                        Swal.close();
                        cn.closeDialog();
                    }, 5000); // 5000 milliseconds = 5 seconds
                }
            },
            error: function () {
                // Handle error, if any
            }
        });
    });

    getForm();

    $("#form").validate({
        rules: {
            firstName: {
                required: true,
            },
            lastName: {
                required: true,
            },
            kinAddress: {
                required: true,
            },
            kinMobileNumber: {
                required: true,
            },
            kinFirstName: {
                required: true,
            },
            kinLastName: {
                required: true,
            },
            kinEmailAddress: {
                required: true,
            },
            monthlySalary: {
                required: true,
            }
        },
        messages: {
            firstName: { required: "First Name is required" },
            lastName: { required: "Last Name is required" },
            kinAddress: { required: "Kin Address is required" },
            kinMobileNumber: { required: "Kin Mobile Number is required" },
            kinFirstName: { required: "Kin First Name is required" },
            kinLastName: { required: "Kin Last Name is required" },
            kinEmailAddress: { required: "Kin Email Address is required" },
            monthlySalary: { required: "Monthly Income is required" },
        },
        showErrors: function (errorMap, errorList) {
            if (errorList.length) {
                let errorMessage = errorList[0].message;
                Swal.fire({
                    icon: 'warning',
                    title: 'Validation Error',
                    text: errorMessage,
                });
            }
        }
    });

    $("#gender").cnComboBox({
        url: '@Url.Content("~/Gender/GetListJson")',
        key: "Id",
        value: "Name",
        class: "form-control"
    });

    function getForm() {
        if (id > 0) {
            cn.ajax({
                url: '@Url.Content("~/CustomerProfileUpdate/GetFormJson")' + '?id=' + id,
                type: "get",
                success: function (obj) {
                    if (obj.Tag == 1) {
                        var result = obj.Data;
                        $("#form").setWebControls(result);
                    }
                }
            });
        } else {
            var defaultData = {};
            defaultData.Company = "";
            defaultData.EmailAddress = "";
            defaultData.MobileNumber = "";
            $("#form").setWebControls(defaultData);
        }
    }

    function saveForm(index) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'Do you really want to update the record?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, update it!',
            cancelButtonText: 'No, keep it'
        }).then((result) => {
            if (result.isConfirmed) {
                if ($("#form").validate().form()) {
                    var postData = $("#form").getWebControls({ Id: id });
                    postData.MaritalStatus = cn.getLastValue(postData.MaritalStatus);
                    postData.Gender = cn.getLastValue(postData.Gender);
                    postData.KinRelationship = cn.getLastValue(postData.KinRelationship);
                    postData.ContributionBranch = cn.getLastValue(postData.ContributionBranch);
                    postData.AlertType = cn.getLastValue(postData.AlertType);
                    postData.CustomerBank = cn.getLastValue(postData.CustomerBank);
                    postData.AccountType = cn.getLastValue(postData.AccountType);
                    postData.BankAccountNumber = cn.getLastValue(postData.BankAccountNumber);
                    postData.Title = cn.getLastValue(postData.Title);
                    postData.KinAddress = cn.getLastValue(postData.KinAddress);

                    if (postData.MaritalStatus <= 0) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Please select Marital Status!'
                        });
                        return false;
                    } else if (postData.KinRelationship <= 0) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Please select Kin\'s Relationship!'
                        });
                        return false;
                    } else if (postData.Gender <= 0) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Please select Gender!'
                        });
                        return false;
                    } else if (postData.ContributionBranch <= 0) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Please select Contribution Branch!'
                        });
                        return false;
                    } else if (postData.AlertType <= 0) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Please select Alert Type!'
                        });
                        return false;
                    } else if (postData.CustomerBank <= 0) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Please select Bank Name!'
                        });
                        return false;
                    } else if (postData.AccountType <= 0) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Please select Account Type!'
                        });
                        return false;
                    } else if (postData.Title <= 0) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Please select Title!'
                        });
                        return false;
                    } else if (isNaN(postData.BankAccountNumber)) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Bank account number must be a digit!'
                        });
                        return false;
                    } else if (postData.BankAccountNumber.length !== 10) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: 'Bank account number must be 10 in length!'
                        });
                        return false;
                    }

                    cn.ajax({
                        url: '@Url.Content("~/CustomerProfileUpdate/SaveFormJson")',
                        type: "post",
                        data: postData,
                        success: function (obj) {
                            if (obj.Tag == 1) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: obj.Message
                                }).then(() => {
                                    parent.searchGrid();
                                    parent.layer.close(index);
                                });
                            } else {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Warning',
                                    text: obj.Message
                                }).then(() => {
                                    parent.layer.close(index);
                                });
                            }
                        }
                    });
                }
            } else {
                // User clicked 'No, keep it', do nothing
                return false;
            }
        });
    }


    $(function () {
        $.ajax({
            url: '@Url.Content("~/CustomerProfileUpdate/ViewCustomerInformation")',
            method: 'GET',
            success: function (data) {
                var bankName = data.Data.BankName;
                var title = data.Data.Title;
                var gender = data.Data.Gender;
                var maritalStatus = data.Data.MaritalStatus;
                var alertType = data.Data.AlertType;
                var accountType = data.Data.AccountType;
                var contributionBranch = data.Data.ContributionBranch;
                var kinRelationship = data.Data.NOKRelationship;

                $("#bankName").cnComboBox({
                    url: '@Url.Content("~/Bank/GetListJson")',
                    key: "Name",
                    value: "Name",
                    onLoadSuccess: function () {
                        $("#bankName").cnComboBox('setValue', bankName);
                    }
                });

                $("#title").cnComboBox({
                    url: '@Url.Content("~/Title/GetListJson")',
                    key: "Id",
                    value: "Name",
                    onLoadSuccess: function () {
                        $("#title").cnComboBox('setValue', title);
                    }
                });

                $("#gender").cnComboBox({
                    url: '@Url.Content("~/Gender/GetListJson")',
                    key: "Id",
                    value: "Name",
                    onLoadSuccess: function () {
                        $("#gender").cnComboBox('setValue', gender);
                    }
                });

                $("#marital").cnComboBox({
                    url: '@Url.Content("~/MaritalStatus/GetListJson")',
                    key: "Id",
                    value: "Name",
                    onLoadSuccess: function () {
                        $("#marital").cnComboBox('setValue', maritalStatus);
                    }
                });

                $("#alertType").cnComboBox({
                    url: '@Url.Content("~/AlertType/GetListJson")',
                    key: "Id",
                    value: "Name",
                    onLoadSuccess: function () {
                        $("#alertType").cnComboBox('setValue', alertType);
                    }
                });

                $("#accountType").cnComboBox({
                    url: '@Url.Content("~/AccountType/GetListJson")',
                    key: "Id",
                    value: "Name",
                    onLoadSuccess: function () {
                        $("#accountType").cnComboBox('setValue', accountType);
                    }
                });

                $("#branch").cnComboBox({
                    url: '@Url.Content("~/State/GetListJson")',
                    key: "Id",
                    value: "Name",
                    onLoadSuccess: function () {
                        $("#branch").cnComboBox('setValue', contributionBranch);
                    }
                });

                $("#kinRelationship").cnComboBox({
                    url: '@Url.Content("~/Relation/GetListJson")',
                    key: "Id",
                    value: "Name",
                    onLoadSuccess: function () {
                        $("#kinRelationship").cnComboBox('setValue', kinRelationship);
                    }
                });

                setTimeout(function () {
                    $("#bankName").cnComboBox('setValue', bankName);
                    $("#title").cnComboBox('setValue', title);
                    $("#gender").cnComboBox('setValue', gender);
                    $("#marital").cnComboBox('setValue', maritalStatus);
                    $("#alertType").cnComboBox('setValue', alertType);
                    $("#accountType").cnComboBox('setValue', accountType);
                    $("#branch").cnComboBox('setValue', contributionBranch);
                    $("#kinRelationship").cnComboBox('setValue', kinRelationship);
                }, 100);
            },
            error: function (error) {
                console.error('Error fetching customer data:', error);
            }
        });
    });
</script>
