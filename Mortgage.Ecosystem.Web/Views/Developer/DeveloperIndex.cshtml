@{    Layout = "~/Views/Shared/_Index.cshtml";}<div class="container-div">    <div class="row">        <div id="searchDiv" class="col-sm-12 search-collapse">            <div class="select-list">                <ul>                    <li>                        <label>Name: &nbsp;</label><input id="name" col="Name" type="text" autocomplete="off" />                    </li>                    <li>                        <label>Status: &nbsp;</label><span id="status" col="Status"></span>                    </li>                    <li class="select-time">                        <label>Created: &nbsp;</label>                        <input id="startTime" col="StartTime" type="text" class="time-input" autocomplete="off" placeholder="start time" />                        <span>-</span>                        <input id="endTime" col="EndTime" type="text" class="time-input" autocomplete="off" placeholder="end time" />                    </li>                    <li>                        <a id="btnSearch" class="btn btn-primary btn-sm" onclick="searchGrid()"><i class="fa fa-search"></i>&nbsp;Search</a>                    </li>                </ul>            </div>        </div>        <div class="btn-group-sm" id="toolbar">            @*            <a id="btnAdd" class="btn btn-success" onclick="showSaveForm(true)"><i class="fa fa-plus"></i> Add</a>            *@            <a id="btnEdit" class="btn btn-primary disabled" onclick="showSaveForm(false)"><i class="fa fa-edit"></i> Edit</a>            <a id="btnDelete" class="btn btn-danger disabled" onclick="deleteForm()"><i class="fa fa-remove"></i> Delete</a>        </div>        <div class="col-sm-12 select-table table-striped">            <table id="gridTable" data-mobile-responsive="true"></table>        </div>    </div></div><script type="text/javascript">    $(function () {        initGrid();        $("#status").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(StatusEnum).EnumToDictionaryString())) });        laydate.render({ elem: '#startTime', format: 'yyyy-MM-dd', type: 'date', theme: 'molv' });        laydate.render({ elem: '#endTime', format: 'yyyy-MM-dd', type: 'date', theme: 'molv' });    });    function initGrid() {        var queryUrl = '@Url.Content("~/Developer/GetPageListJson")';        $('#gridTable').cnTable({            url: queryUrl,            columns: [                { checkbox: true, visible: true },                { field: 'Id', title: 'Id', visible: false },                { field: 'Name', title: 'Name', sortable: false },                { field: 'RCNumber', title: 'RC Number', sortable: false },                { field: 'SectorName', title: 'Sector', sortable: false },                { field: 'DateOfIncorporation', title: 'Date Of Incorporation', visible: false, sortable: false },                { field: 'NatureOfBusiness', title: 'Nature Of Business', visible: false, sortable: false },                { field: 'NameOfRegistrar', title: 'Name Of Registrar', visible: false, sortable: false },                { field: 'CompanyClassName', title: 'Class', visible: false, sortable: false },                { field: 'CompanyTypeName', title: 'Type', visible: false, sortable: false },                {                    field: 'BaseModifyTime', title: 'Create Time', formatter: function (value, row, index) {                        return cn.formatDate(value, "yyyy-MM-dd HH:mm:ss");                    }                },                {                    field: 'Status',                    title: 'Status',                    align: 'center',                    formatter: function (value, row, index) {                        if (value == "@ApprovalEnum.Pending.ToInt()") {                            return '<span class="badge badge-warning">' + "@ApprovalEnum.Pending.GetDescription()" + '</span>';                        } else if (value == "@ApprovalEnum.Approved.ToInt()") {                            return '<span class="badge badge-primary">' + "@ApprovalEnum.Approved.GetDescription()" + '</span>';                        } else if (value == "@ApprovalEnum.Rejected.ToInt()") {                            return '<span class="badge badge-danger">' + "@ApprovalEnum.Rejected.GetDescription()" + '</span>';                        }                        else {                            return '<span class="badge badge-danger">' + "@ApprovalEnum.Cancelled.GetDescription()" + '</span>';                        }                    }                }            ],            queryParams: function (params) {                var pagination = $('#gridTable').cnTable('getPagination', params);                var queryString = $("#searchDiv").getWebControls(pagination);                return queryString;            }        });    }    function searchGrid(callBackId) {        var param = $("#searchDiv").getWebControls();        $('#gridTable').cnTreeTable('search', param);        if (callBackId) {            id = callBackId;        }    }    function searchGrid() {        $('#gridTable').cnTable('search');        resetToolbarStatus();    }    function showSaveForm(bAdd) {        var id = 0;        if (!bAdd) {            var selectedRow = $("#gridTable").bootstrapTable("getSelections");            if (!cn.checkRowEdit(selectedRow)) {                return;            }            else {                id = selectedRow[0].Id;            }        }        cn.openDialog({            title: id > 0 ? "Edit Agent" : "Add Agent",            content: '@Url.Content("~/Company/CompanyForm")' + '?id=' + id,            width: "780px",            callback: function (index, layero) {                var iframeWin = window[layero.find('iframe')[0]['name']];                iframeWin.saveForm(index);            }        });    }    function deleteForm() {        var selectedRow = $("#gridTable").bootstrapTable("getSelections");        if (cn.checkRowDelete(selectedRow)) {            cn.confirm("Confirm to delete the selected " + selectedRow.length + " row data?", function () {                var ids = cn.getIds(selectedRow);                cn.ajax({                    url: '@Url.Content("~/Company/DeleteFormJson")' + '?ids=' + ids,                    type: "post",                    success: function (obj) {                        if (obj.Tag == 1) {                            cn.msgSuccess(obj.Message);                            searchGrid();                        }                        else {                            cn.msgError(obj.Message);                        }                    }                });            });        }    }</script>