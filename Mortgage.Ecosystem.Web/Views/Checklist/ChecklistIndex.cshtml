@{
    Layout = "~/Views/Shared/_Index.cshtml";
}
<div class="ibox-title">
    <h5>CHECKLIST SETUP</h5>
</div>
<div class="container-div">
    <div class="row">
        <div id="searchDiv" class="col-sm-12 search-collapse">
            <div class="select-list">
                <ul>
                    <li>
                        Checklist: <input id="checklist" col="Checklist" type="text" />
                    </li>

                    <li>
                        <a id="btnSearch" class="btn btn-primary btn-sm" onclick="searchGrid()"><i class="fa fa-search"></i>&nbsp;Search</a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="btn-group-sm" id="toolbar">
            <a id="btnAdd" class="btn btn-success" onclick="showSaveForm(true)"><i class="fa fa-plus"></i> Add</a>
            <a id="btnEdit" class="btn btn-primary disabled" onclick="showSaveForm(false)"><i class="fa fa-edit"></i> Edit</a>
            <a id="btnDelete" class="btn btn-danger disabled" onclick="deleteForm()"><i class="fa fa-remove"></i> Delete</a>
        </div>

        <div class="col-sm-12 select-table table-striped">
            <table id="gridTable" data-mobile-responsive="true"></table>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


<script type="text/javascript">
    $(function () {
        initGrid();

        $("#status").cnComboBox({ data: cn.getJson(@Html.Raw(typeof(StatusEnum).EnumToDictionaryString())) });

        laydate.render({ elem: '#startTime', format: 'yyyy-MM-dd', theme: 'molv' });
        laydate.render({ elem: '#endTime', format: 'yyyy-MM-dd', theme: 'molv' });
    });

    function initGrid() {
        var queryUrl = '@Url.Content("~/Checklist/GetChecklistPageListJson")';
        $('#gridTable').cnTable({
            url: queryUrl,
            columns: [
                { checkbox: true, visible: true },
                { field: 'Id', title: 'Id', visible: false },
                { field: 'ProductName', title: 'Product Name', sortable: false },
                { field: 'ProductCode', title: 'Product Code', sortable: false },
                { field: 'Checklist', title: 'Checklist', sortable: false },
                { field: 'Remark', title: 'Remark', sortable: false },


            ],
            queryParams: function (params) {
                var pagination = $('#gridTable').cnTable('getPagination', params);
                var queryString = $("#searchDiv").getWebControls(pagination);
                return queryString;
            }
        });
    }

    function showSaveForm(bAdd) {
        id = 0;
        if (!bAdd) {
            var selectedRow = $("#gridTable").bootstrapTable("getSelections");
            if (!cn.checkRowEdit(selectedRow)) {
                return;
            } else {
                id = selectedRow[0].Id;
            }
        }

        var confirmButtonText = id > 0 ? "Update" : "Add";
        cn.openDialog({
            title: id > 0 ? "Edit Checklist" : "Checklist",
            content: '@Url.Content("~/Checklist/ChecklistForm")' + '?id=' + id,
            width: "780px",
            btn: [confirmButtonText, 'Cancel'],
            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
                iframeWin.saveForm(index);
                searchGrid();
            }
        });
    }

    function deleteForm(index) {
        var selectedRow = $("#gridTable").bootstrapTable("getSelections");
        if (cn.checkRowDelete(selectedRow)) {
            Swal.fire({
                title: 'Are you sure?',
                text: "Confirm to delete the selected " + selectedRow.length + " row(s) data?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var ids = cn.getIds(selectedRow);

                    cn.ajax({
                        url: '@Url.Content("~/Checklist/DeleteFormJson")' + '?ids=' + ids,
                        type: "post",
                        success: function (obj) {
                            if (obj.Tag == 1) {
                                cn.msgSuccess(obj.Message);
                                Swal.fire(
                                    'Deleted!',
                                    'The selected row(s) has been deleted.',
                                    'success'
                                ).then(() => {
                                    // Refresh the grid after confirmation
                                    location.reload(true);

                                });
                            } else {
                                cn.msgError(obj.Message);
                                Swal.fire(
                                    'Error!',
                                    'There was an error deleting the row(s).',
                                    'error'
                                );
                            }
                        },
                        complete: function () {
                            // Ensure the processing overlay is closed after the AJAX request completes
                            Swal.close();
                        }
                    });
                }
            });
        }
    }
</script>